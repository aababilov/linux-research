cscope 16 $HOME/projects/rsrch/inet/1               0000217705
	@cl.c

1 
	~<sys/sockë.h
>

2 
	~<¨∑/öë.h
>

3 
	~<°dio.h
>

5 
	$maö
(){

6 
sockaddr_ö
 
my_addr
 = {0}, 
th_addr
;

7 
c⁄nfd
, 
th_sz
, 
i
;

8 
buf
[1024] = "Hello";

9 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

10 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(7500);

11 
	`öë_©⁄
("127.0.0.1", &
my_addr
.
sö_addr
);

13 
c⁄nfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`¥ötf
("Sock fd %d\t", 
c⁄nfd
);

15 
	`c⁄√˘
(
c⁄nfd
, (
sockaddr
*Ë&
my_addr
,  my_addr);

16 
	`¥ötf
("Síd: %d\n", 
	`£nd
(
c⁄nfd
, 
buf
, 4, 0));

17 
	`˛o£
(
c⁄nfd
);

20 
	}
}

	@sr.c

1 
	~<sys/sockë.h
>

2 
	~<¨∑/öë.h
>

3 
	~<°dio.h
>

4 
	~<f˙é.h
>

6 
	$maö
(){

7 
sockaddr_ö
 
my_addr
 = {0}, 
th_addr
 = {0};

8 
svfd
, 
c⁄nfd
, 
th_sz
 =2*  
th_addr
, 
i
;

9 
buf
[1024];

10 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

11 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(7500);

12 
	`öë_©⁄
("127.0.0.1", &
my_addr
.
sö_addr
);

15 
svfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

16 
i
 = 
	`f˙é
(
svfd
, 
F_GETFD
, 0);

17 
	`f˙é
(
svfd
, 
F_SETFD
, 
i
 | 
O_NONBLOCK
);

18 
	`böd
(
svfd
, (
sockaddr
 *)&
my_addr
,  my_addr);

19 
	`li°í
(
svfd
, 512);

21 
	`f˙é
(
svfd
, 
F_SETFD
, 
i
 | 
O_NONBLOCK
);

22 
c⁄nfd
 = 
	`ac˚±
(
svfd
, (
sockaddr
 *)&
th_addr
, &
th_sz
);

23 
	`¥ötf
("C⁄¿wôh %s; fd %d\n", 
	`öë_¡ﬂ
(
th_addr
.
sö_addr
), 
c⁄nfd
);

24 
i
 = 
	`ªcv
(
c⁄nfd
, 
buf
, 4, 0);

25 
buf
[5] = 0;

26 
	`¥ötf
("Rec: %s; %d byãs\n", 
buf
, 
i
);

27 
	`˛o£
(
c⁄nfd
);

29 
	`˛o£
(
svfd
);

31 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/fcntl.h

23 #i‚def 
_FCNTL_H


24 
	#_FCNTL_H
 1

	)

26 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/f˙é.h
>

36 #ifde‡
__USE_XOPEN


37 
	~<sys/°©.h
>

40 #ifdef 
__USE_MISC


41 #i‚de‡
R_OK


44 
	#R_OK
 4

	)

45 
	#W_OK
 2

	)

46 
	#X_OK
 1

	)

47 
	#F_OK
 0

	)

52 #ifde‡
__USE_XOPEN


53 
	#SEEK_SET
 0

	)

54 
	#SEEK_CUR
 1

	)

55 
	#SEEK_END
 2

	)

63 
f˙é
 (
__fd
, 
__cmd
, ...);

71 #i‚de‡
__USE_FILE_OFFSET64


72 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__REDIRECT


75 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

76 
	`__n⁄nuŒ
 ((1));

78 
	#›í
 
›í64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

90 #i‚de‡
__USE_FILE_OFFSET64


91 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

93 #ifde‡
__REDIRECT


94 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

95 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

97 
	#¸ót
 
¸ót64


	)

100 #ifde‡
__USE_LARGEFILE64


101 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

104 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

105 && !
deföed
 
__USE_POSIX
))

114 
	#F_ULOCK
 0

	)

115 
	#F_LOCK
 1

	)

116 
	#F_TLOCK
 2

	)

117 
	#F_TEST
 3

	)

119 #i‚de‡
__USE_FILE_OFFSET64


120 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

122 #ifde‡
__REDIRECT


123 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

125 
	#lockf
 
lockf64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

133 #ifde‡
__USE_XOPEN2K


136 #i‚de‡
__USE_FILE_OFFSET64


137 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

138 
__advi£
Ë
__THROW
;

140 #ifde‡
__REDIRECT_NTH


141 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

142 
__off64_t
 
__Àn
, 
__advi£
),

143 
posix_Ádvi£64
);

145 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

148 #ifde‡
__USE_LARGEFILE64


149 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

150 
__advi£
Ë
__THROW
;

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

163 
__off64_t
 
__Àn
),

164 
posix_ÁŒoˇã64
);

166 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

169 #ifde‡
__USE_LARGEFILE64


170 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

174 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

146 
	#°dö
 
°dö


	)

147 
	#°dout
 
°dout


	)

148 
	#°dîr
 
°dîr


	)

150 
__BEGIN_NAMESPACE_STD


152 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

155 
__END_NAMESPACE_STD


158 
__BEGIN_NAMESPACE_STD


163 #i‚de‡
__USE_FILE_OFFSET64


164 
FILE
 *
	`tmpfûe
 ();

166 #ifde‡
__REDIRECT


167 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

169 
	#tmpfûe
 
tmpfûe64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
FILE
 *
	`tmpfûe64
 ();

178 *
	$tm≤am
 (*
__s
Ë
__THROW
;

179 
__END_NAMESPACE_STD


181 #ifde‡
__USE_MISC


184 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

188 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


196 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

197 
__THROW
 
__©åibuã_mÆloc__
;

201 
__BEGIN_NAMESPACE_STD


206 
	`f˛o£
 (
FILE
 *
__°ªam
);

211 
	`fÊush
 (
FILE
 *
__°ªam
);

212 
__END_NAMESPACE_STD


214 #ifde‡
__USE_MISC


221 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

224 #ifde‡
__USE_GNU


231 
	`f˛o£Æl
 ();

235 
__BEGIN_NAMESPACE_STD


236 #i‚de‡
__USE_FILE_OFFSET64


241 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

242 
__c⁄°
 *
__ª°ri˘
 
__modes
);

247 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

248 
__c⁄°
 *
__ª°ri˘
 
__modes
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
);

251 #ifde‡
__REDIRECT


252 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

253 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

254 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

255 
__c⁄°
 *
__ª°ri˘
 
__modes
,

256 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

258 
	#f›í
 
f›í64


	)

259 
	#‰e›í
 
‰e›í64


	)

262 
__END_NAMESPACE_STD


263 #ifde‡
__USE_LARGEFILE64


264 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

265 
__c⁄°
 *
__ª°ri˘
 
__modes
);

266 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

267 
__c⁄°
 *
__ª°ri˘
 
__modes
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
);

271 #ifdef 
__USE_POSIX


273 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

276 #ifdef 
__USE_GNU


279 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

284 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

289 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

290 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

294 
__BEGIN_NAMESPACE_STD


297 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

301 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

302 
__modes
, 
size_t
 
__n
Ë
__THROW
;

303 
__END_NAMESPACE_STD


305 #ifdef 
__USE_BSD


308 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
size_t
 
__size
Ë
__THROW
;

312 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

316 
__BEGIN_NAMESPACE_STD


321 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

322 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

327 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
	$•rötf
 (*
__ª°ri˘
 
__s
,

330 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

336 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

337 
_G_va_li°
 
__¨g
);

342 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

344 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

345 
_G_va_li°
 
__¨g
Ë
__THROW
;

346 
__END_NAMESPACE_STD


348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


349 
__BEGIN_NAMESPACE_C99


351 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

352 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

353 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

355 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

357 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

358 
__END_NAMESPACE_C99


361 #ifde‡
__USE_GNU


364 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

365 
_G_va_li°
 
__¨g
)

366 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

367 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

368 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

370 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

371 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

372 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

380 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

381 
_G_va_li°
 
__¨g
)

382 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

383 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

388 
__BEGIN_NAMESPACE_STD


393 
	`fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

394 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

399 
	`sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

401 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

402 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

403 
__END_NAMESPACE_STD


405 #ifdef 
__USE_ISOC99


406 
__BEGIN_NAMESPACE_C99


411 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

412 
_G_va_li°
 
__¨g
)

413 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

419 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0)));

423 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

424 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

425 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

426 
__END_NAMESPACE_C99


430 
__BEGIN_NAMESPACE_STD


435 
	`fgëc
 (
FILE
 *
__°ªam
);

436 
	`gëc
 (
FILE
 *
__°ªam
);

442 
	`gëch¨
 ();

443 
__END_NAMESPACE_STD


447 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

449 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


454 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

455 
	`gëch¨_u∆ocked
 ();

458 #ifde‡
__USE_MISC


465 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

469 
__BEGIN_NAMESPACE_STD


477 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

478 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

484 
	`putch¨
 (
__c
);

485 
__END_NAMESPACE_STD


489 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

491 #ifde‡
__USE_MISC


498 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

501 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


506 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

507 
	`putch¨_u∆ocked
 (
__c
);

511 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

512 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

514 
	`gëw
 (
FILE
 *
__°ªam
);

517 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

521 
__BEGIN_NAMESPACE_STD


526 *
	`fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
);

533 *
	`gës
 (*
__s
);

534 
__END_NAMESPACE_STD


536 #ifde‡
__USE_GNU


543 *
	`fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

544 
FILE
 *
__ª°ri˘
 
__°ªam
);

548 #ifdef 
__USE_GNU


559 
_IO_ssize_t
 
	`__gëdñim
 (**
__ª°ri˘
 
__löïå
,

560 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

561 
FILE
 *
__ª°ri˘
 
__°ªam
);

562 
_IO_ssize_t
 
	`gëdñim
 (**
__ª°ri˘
 
__löïå
,

563 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

564 
FILE
 *
__ª°ri˘
 
__°ªam
);

572 
_IO_ssize_t
 
	`gëlöe
 (**
__ª°ri˘
 
__löïå
,

573 
size_t
 *
__ª°ri˘
 
__n
,

574 
FILE
 *
__ª°ri˘
 
__°ªam
);

578 
__BEGIN_NAMESPACE_STD


583 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

589 
	`puts
 (
__c⁄°
 *
__s
);

596 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

603 
size_t
 
	`‰ód
 (*
__ª°ri˘
 
__±r
, size_à
__size
,

604 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

609 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

610 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

611 
__END_NAMESPACE_STD


613 #ifde‡
__USE_GNU


620 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

621 
FILE
 *
__ª°ri˘
 
__°ªam
);

624 #ifde‡
__USE_MISC


631 
size_t
 
	`‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, size_à
__size
,

632 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

633 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

634 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

638 
__BEGIN_NAMESPACE_STD


643 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

648 
	`·ñl
 (
FILE
 *
__°ªam
);

653 
	`ªwöd
 (
FILE
 *
__°ªam
);

654 
__END_NAMESPACE_STD


661 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


662 #i‚de‡
__USE_FILE_OFFSET64


667 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

672 
__off_t
 
	`·ñlo
 (
FILE
 *
__°ªam
);

674 #ifde‡
__REDIRECT


675 
	`__REDIRECT
 (
f£eko
,

676 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

677 
f£eko64
);

678 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

680 
	#f£eko
 
f£eko64


	)

681 
	#·ñlo
 
·ñlo64


	)

686 
__BEGIN_NAMESPACE_STD


687 #i‚de‡
__USE_FILE_OFFSET64


692 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

697 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

699 #ifde‡
__REDIRECT


700 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

701 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

702 
	`__REDIRECT
 (
f£ços
,

703 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

705 
	#fgëpos
 
fgëpos64


	)

706 
	#f£ços
 
f£ços64


	)

709 
__END_NAMESPACE_STD


711 #ifde‡
__USE_LARGEFILE64


712 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

713 
__off64_t
 
	`·ñlo64
 (
FILE
 *
__°ªam
);

714 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

715 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

718 
__BEGIN_NAMESPACE_STD


720 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

722 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
;

724 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
;

725 
__END_NAMESPACE_STD


727 #ifde‡
__USE_MISC


729 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

730 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

731 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

735 
__BEGIN_NAMESPACE_STD


740 
	`≥º‹
 (
__c⁄°
 *
__s
);

741 
__END_NAMESPACE_STD


747 
	~<bôs/sys_îæi°.h
>

750 #ifdef 
__USE_POSIX


752 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
;

755 #ifde‡
__USE_MISC


757 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

761 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

762 
deföed
 
__USE_MISC
)

767 
FILE
 *
	`p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
);

773 
	`p˛o£
 (
FILE
 *
__°ªam
);

777 #ifdef 
__USE_POSIX


779 *
	$˘îmid
 (*
__s
Ë
__THROW
;

783 #ifde‡
__USE_XOPEN


785 *
	`cu£rid
 (*
__s
);

789 #ifdef 
__USE_GNU


790 
ob°ack
;

793 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

794 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

795 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

796 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

797 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

798 
_G_va_li°
 
__¨gs
)

799 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

803 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


807 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

811 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

814 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

817 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


821 
	#__√ed_gë›t


	)

822 
	~<gë›t.h
>

827 #ifde‡
__USE_EXTERN_INLINES


828 
	~<bôs/°dio.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && !
deföed
 
__˝lu•lus


831 
	~<bôs/°dio2.h
>

834 
__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

35 
	~<bôs/sockë.h
>

37 #ifde‡
__USE_BSD


40 
	sosockaddr


42 
	mß_Ámûy
;

43 
	mß_d©a
[14];

51 
	mSHUT_RD
 = 0,

52 
	#SHUT_RD
 
SHUT_RD


	)

53 
	mSHUT_WR
,

54 
	#SHUT_WR
 
SHUT_WR


	)

55 
	mSHUT_RDWR


56 
	#SHUT_RDWR
 
SHUT_RDWR


	)

65 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


66 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

67 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

71 
	#__SOCKADDR_ALLTYPES
 \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

86 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

87 uni⁄ { 
	m__SOCKADDR_ALLTYPES


88 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

89 #unde‡
__SOCKADDR_ONETYPE


90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


100 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

106 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

107 
__fds
[2]Ë
__THROW
;

110 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

111 
__THROW
;

114 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

115 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

124 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

128 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

136 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

143 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

150 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

151 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

152 
sockÀn_t
 
__addr_Àn
);

161 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

162 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

163 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

171 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

172 
__Êags
);

179 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

185 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

186 *
__ª°ri˘
 
__›tvÆ
,

187 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

192 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

193 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

199 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

209 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

210 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

218 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

221 #ifde‡
__USE_XOPEN2K


223 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

227 #ifde‡
__USE_MISC


231 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

234 
__END_DECLS


	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


26 
	~<sys/ty≥s.h
>

30 
	#O_ACCMODE
 0003

	)

31 
	#O_RDONLY
 00

	)

32 
	#O_WRONLY
 01

	)

33 
	#O_RDWR
 02

	)

34 
	#O_CREAT
 0100

	)

35 
	#O_EXCL
 0200

	)

36 
	#O_NOCTTY
 0400

	)

37 
	#O_TRUNC
 01000

	)

38 
	#O_APPEND
 02000

	)

39 
	#O_NONBLOCK
 04000

	)

40 
	#O_NDELAY
 
O_NONBLOCK


	)

41 
	#O_SYNC
 010000

	)

42 
	#O_FSYNC
 
O_SYNC


	)

43 
	#O_ASYNC
 020000

	)

45 #ifde‡
__USE_GNU


46 
	#O_DIRECT
 040000

	)

47 
	#O_DIRECTORY
 0200000

	)

48 
	#O_NOFOLLOW
 0400000

	)

49 
	#O_NOATIME
 01000000

	)

55 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


56 
	#O_DSYNC
 
O_SYNC


	)

57 
	#O_RSYNC
 
O_SYNC


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	#O_LARGEFILE
 0100000

	)

65 
	#F_DUPFD
 0

	)

66 
	#F_GETFD
 1

	)

67 
	#F_SETFD
 2

	)

68 
	#F_GETFL
 3

	)

69 
	#F_SETFL
 4

	)

70 #i‚de‡
__USE_FILE_OFFSET64


71 
	#F_GETLK
 5

	)

72 
	#F_SETLK
 6

	)

73 
	#F_SETLKW
 7

	)

75 
	#F_GETLK
 
F_GETLK64


	)

76 
	#F_SETLK
 
F_SETLK64


	)

77 
	#F_SETLKW
 
F_SETLKW64


	)

79 
	#F_GETLK64
 12

	)

80 
	#F_SETLK64
 13

	)

81 
	#F_SETLKW64
 14

	)

83 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


84 
	#F_SETOWN
 8

	)

85 
	#F_GETOWN
 9

	)

88 #ifde‡
__USE_GNU


89 
	#F_SETSIG
 10

	)

90 
	#F_GETSIG
 11

	)

93 #ifde‡
__USE_GNU


94 
	#F_SETLEASE
 1024

	)

95 
	#F_GETLEASE
 1025

	)

96 
	#F_NOTIFY
 1026

	)

100 
	#FD_CLOEXEC
 1

	)

103 
	#F_RDLCK
 0

	)

104 
	#F_WRLCK
 1

	)

105 
	#F_UNLCK
 2

	)

108 
	#F_EXLCK
 4

	)

109 
	#F_SHLCK
 8

	)

111 #ifde‡
__USE_BSD


113 
	#LOCK_SH
 1

	)

114 
	#LOCK_EX
 2

	)

115 
	#LOCK_NB
 4

	)

117 
	#LOCK_UN
 8

	)

120 #ifde‡
__USE_GNU


121 
	#LOCK_MAND
 32

	)

122 
	#LOCK_READ
 64

	)

123 
	#LOCK_WRITE
 128

	)

124 
	#LOCK_RW
 192

	)

127 #ifde‡
__USE_GNU


129 
	#DN_ACCESS
 0x00000001

	)

130 
	#DN_MODIFY
 0x00000002

	)

131 
	#DN_CREATE
 0x00000004

	)

132 
	#DN_DELETE
 0x00000008

	)

133 
	#DN_RENAME
 0x00000010

	)

134 
	#DN_ATTRIB
 0x00000020

	)

135 
	#DN_MULTISHOT
 0x80000000

	)

138 
	sÊock


140 
	ml_ty≥
;

141 
	ml_whí˚
;

142 #i‚de‡
__USE_FILE_OFFSET64


143 
__off_t
 
	ml_°¨t
;

144 
__off_t
 
	ml_Àn
;

146 
__off64_t
 
	ml_°¨t
;

147 
__off64_t
 
	ml_Àn
;

149 
__pid_t
 
	ml_pid
;

152 #ifde‡
__USE_LARGEFILE64


153 
	sÊock64


155 
	ml_ty≥
;

156 
	ml_whí˚
;

157 
__off64_t
 
	ml_°¨t
;

158 
__off64_t
 
	ml_Àn
;

159 
__pid_t
 
	ml_pid
;

165 #ifdef 
__USE_BSD


166 
	#FAPPEND
 
O_APPEND


	)

167 
	#FFSYNC
 
O_FSYNC


	)

168 
	#FASYNC
 
O_ASYNC


	)

169 
	#FNONBLOCK
 
O_NONBLOCK


	)

170 
	#FNDELAY
 
O_NDELAY


	)

174 #ifde‡
__USE_XOPEN2K


175 
	#POSIX_FADV_NORMAL
 0

	)

176 
	#POSIX_FADV_RANDOM
 1

	)

177 
	#POSIX_FADV_SEQUENTIAL
 2

	)

178 
	#POSIX_FADV_WILLNEED
 3

	)

179 
	#POSIX_FADV_DONTNEED
 4

	)

180 
	#POSIX_FADV_NOREUSE
 5

	)

183 
__BEGIN_DECLS


186 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

187 
__THROW
;

189 
__END_DECLS


	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‡!
deföed
 
_SYS_SOCKET_H
 && !deföed 
_NETINET_IN_H


27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<limôs.h
>

32 
	~<sys/ty≥s.h
>

35 #i‚de‡
__sockÀn_t_deföed


36 
__sockÀn_t
 
	tsockÀn_t
;

37 
	#__sockÀn_t_deföed


	)

41 
	e__sockë_ty≥


43 
	mSOCK_STREAM
 = 1,

45 
	#SOCK_STREAM
 
SOCK_STREAM


	)

46 
	mSOCK_DGRAM
 = 2,

48 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

49 
	mSOCK_RAW
 = 3,

50 
	#SOCK_RAW
 
SOCK_RAW


	)

51 
	mSOCK_RDM
 = 4,

52 
	#SOCK_RDM
 
SOCK_RDM


	)

53 
	mSOCK_SEQPACKET
 = 5,

55 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

56 
	mSOCK_PACKET
 = 10

59 
	#SOCK_PACKET
 
SOCK_PACKET


	)

63 
	#PF_UNSPEC
 0

	)

64 
	#PF_LOCAL
 1

	)

65 
	#PF_UNIX
 
PF_LOCAL


	)

66 
	#PF_FILE
 
PF_LOCAL


	)

67 
	#PF_INET
 2

	)

68 
	#PF_AX25
 3

	)

69 
	#PF_IPX
 4

	)

70 
	#PF_APPLETALK
 5

	)

71 
	#PF_NETROM
 6

	)

72 
	#PF_BRIDGE
 7

	)

73 
	#PF_ATMPVC
 8

	)

74 
	#PF_X25
 9

	)

75 
	#PF_INET6
 10

	)

76 
	#PF_ROSE
 11

	)

77 
	#PF_DEC√t
 12

	)

78 
	#PF_NETBEUI
 13

	)

79 
	#PF_SECURITY
 14

	)

80 
	#PF_KEY
 15

	)

81 
	#PF_NETLINK
 16

	)

82 
	#PF_ROUTE
 
PF_NETLINK


	)

83 
	#PF_PACKET
 17

	)

84 
	#PF_ASH
 18

	)

85 
	#PF_ECONET
 19

	)

86 
	#PF_ATMSVC
 20

	)

87 
	#PF_SNA
 22

	)

88 
	#PF_IRDA
 23

	)

89 
	#PF_PPPOX
 24

	)

90 
	#PF_WANPIPE
 25

	)

91 
	#PF_BLUETOOTH
 31

	)

92 
	#PF_MAX
 32

	)

95 
	#AF_UNSPEC
 
PF_UNSPEC


	)

96 
	#AF_LOCAL
 
PF_LOCAL


	)

97 
	#AF_UNIX
 
PF_UNIX


	)

98 
	#AF_FILE
 
PF_FILE


	)

99 
	#AF_INET
 
PF_INET


	)

100 
	#AF_AX25
 
PF_AX25


	)

101 
	#AF_IPX
 
PF_IPX


	)

102 
	#AF_APPLETALK
 
PF_APPLETALK


	)

103 
	#AF_NETROM
 
PF_NETROM


	)

104 
	#AF_BRIDGE
 
PF_BRIDGE


	)

105 
	#AF_ATMPVC
 
PF_ATMPVC


	)

106 
	#AF_X25
 
PF_X25


	)

107 
	#AF_INET6
 
PF_INET6


	)

108 
	#AF_ROSE
 
PF_ROSE


	)

109 
	#AF_DEC√t
 
PF_DEC√t


	)

110 
	#AF_NETBEUI
 
PF_NETBEUI


	)

111 
	#AF_SECURITY
 
PF_SECURITY


	)

112 
	#AF_KEY
 
PF_KEY


	)

113 
	#AF_NETLINK
 
PF_NETLINK


	)

114 
	#AF_ROUTE
 
PF_ROUTE


	)

115 
	#AF_PACKET
 
PF_PACKET


	)

116 
	#AF_ASH
 
PF_ASH


	)

117 
	#AF_ECONET
 
PF_ECONET


	)

118 
	#AF_ATMSVC
 
PF_ATMSVC


	)

119 
	#AF_SNA
 
PF_SNA


	)

120 
	#AF_IRDA
 
PF_IRDA


	)

121 
	#AF_PPPOX
 
PF_PPPOX


	)

122 
	#AF_WANPIPE
 
PF_WANPIPE


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_MAX
 
PF_MAX


	)

130 
	#SOL_RAW
 255

	)

131 
	#SOL_DECNET
 261

	)

132 
	#SOL_X25
 262

	)

133 
	#SOL_PACKET
 263

	)

134 
	#SOL_ATM
 264

	)

135 
	#SOL_AAL
 265

	)

136 
	#SOL_IRDA
 266

	)

139 
	#SOMAXCONN
 128

	)

142 
	~<bôs/sockaddr.h
>

145 
	ssockaddr


147 
__SOCKADDR_COMMON
 (
ß_
);

148 
	mß_d©a
[14];

154 #i‡
ULONG_MAX
 > 0xffffffff

155 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

157 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000

209 
	#MSG_MORE
 
MSG_MORE


	)

215 
	smsghdr


217 *
	mmsg_«me
;

218 
sockÀn_t
 
	mmsg_«mñí
;

220 
iovec
 *
	mmsg_iov
;

221 
size_t
 
	mmsg_iovÀn
;

223 *
	mmsg_c⁄åﬁ
;

224 
size_t
 
	mmsg_c⁄åﬁÀn
;

226 
	mmsg_Êags
;

230 
	scmsghdr


232 
size_t
 
	mcmsg_Àn
;

234 
	mcmsg_Àvñ
;

235 
	mcmsg_ty≥
;

236 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

237 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

242 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

243 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

245 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

247 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

248 
	#CMSG_FIRSTHDR
(
mhdr
) \

249 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

250 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

251 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

252 & (
size_t
Ë~( (size_tË- 1))

	)

253 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

254 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

255 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

257 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

258 
cmsghdr
 *
__cmsg
Ë
__THROW
;

259 #ifde‡
__USE_EXTERN_INLINES


260 #i‚de‡
_EXTERN_INLINE


261 
	#_EXTERN_INLINE
 
__ölöe


	)

263 
_EXTERN_INLINE
 
cmsghdr
 *

264 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

266 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

270 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

271 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

272 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


273 + 
__mhdr
->
msg_c⁄åﬁÀn
)

274 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

275 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

278  
__cmsg
;

279 
	}
}

286 
SCM_RIGHTS
 = 0x01

287 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

288 #ifde‡
__USE_BSD


289 , 
SCM_CREDENTIALS
 = 0x02

290 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

296 
	su¸ed


298 
pid_t
 
	mpid
;

299 
uid_t
 
	muid
;

300 
gid_t
 
	mgid
;

304 
	~<asm/sockë.h
>

308 
	slögî


310 
	ml_⁄off
;

311 
	ml_lögî
;

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 ()

59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
)

68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
)

94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

133 && (
size_t
Ë(
size
) != 0) \

134 ? ({ *
__±r
 = (*Ë(
±r
); \

135 
FILE
 *
__°ªam
 = (
°ªam
); \

136 
size_t
 
__˙t
; \

137 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

138 
__˙t
 > 0; --__cnt) \

140 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

141 i‡(
__c
 =
EOF
) \

143 *
__±r
++ = 
__c
; \

145 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

146 / (
size_t
Ë(
size
); }) \

147 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

148 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

150 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

151 (Ë(
n
), (
size_t
) 0) \

152 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

154 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

155 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

156 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

157 && (
size_t
Ë(
size
) != 0) \

158 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

159 
FILE
 *
__°ªam
 = (
°ªam
); \

160 
size_t
 
__˙t
; \

161 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

162 
__˙t
 > 0; --__cnt) \

163 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

165 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

166 / (
size_t
Ë(
size
); }) \

167 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

168 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

170 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

171 (Ë(
n
), (
size_t
) 0) \

172 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

176 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 
	#•rötf
(
°r
, ...) \

31 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

32 
__VA_ARGS__
)

	)

33 
	#v•rötf
(
°r
, 
fmt
, 
≠
) \

34 
	`__buûtö___v•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (°r), 
fmt
, 
≠
)

	)

36 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


38 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

39 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

40 ...Ë
__THROW
;

41 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

42 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

43 
_G_va_li°
 
__≠
Ë
__THROW
;

45 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

46 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

47 
__VA_ARGS__
)

	)

48 
	#v¢¥ötf
(
°r
, 
Àn
, 
fmt
, 
≠
) \

49 
	`__buûtö___v¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

50 
fmt
, 
≠
)

	)

54 #i‡
__USE_FORTIFY_LEVEL
 > 1

56 
	`__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

57 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

58 
	`__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

59 
	`__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

60 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

61 
	`__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

62 
_G_va_li°
 
__≠
);

64 
	#¥ötf
(...) \

65 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

66 
	#Ârötf
(
°ªam
, ...) \

67 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

68 
	#v¥ötf
(
f‹m©
, 
≠
) \

69 
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

70 
	#vÂrötf
(
°ªam
, 
f‹m©
, 
≠
) \

71 
	`__vÂrötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
f‹m©
, 
≠
)

	)

75 *
	`__gës_chk
 (*
__°r
, 
size_t
);

76 
	#gës
(
__°r
) \

77 ((
	`__bos
 (
__°r
Ë=(
size_t
) -1) \

78 ? (
gës
Ë(
__°r
Ë: 
	`__gës_chk
 (__°r, 
	`__bos
 (__°r)))

	)

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 
__quad_t


	)

110 
	#__UQUAD_TYPE
 
__u_quad_t


	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	#__SQUAD_TYPE
 

	)

119 
	#__UQUAD_TYPE
 

	)

120 
	#__SWORD_TYPE
 

	)

121 
	#__UWORD_TYPE
 

	)

122 
	#__SLONG32_TYPE
 

	)

123 
	#__ULONG32_TYPE
 

	)

124 
	#__S64_TYPE
 

	)

125 
	#__U64_TYPE
 

	)

129 
	~<bôs/ty≥sizes.h
>

133 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

136 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

137 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

138 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

139 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

140 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

141 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

142 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

143 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

144 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

145 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

146 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

147 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

148 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

149 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

150 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

151 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

152 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

153 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

155 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

156 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

157 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

160 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

163 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

166 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

171 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

172 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

175 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

176 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

179 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

180 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

182 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

186 
__off64_t
 
	t__loff_t
;

187 
__quad_t
 *
	t__qaddr_t
;

188 *
	t__ˇddr_t
;

191 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

194 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

197 #unde‡
__STD_TYPE


	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

90 #unde‡
__USE_ISOC99


91 #unde‡
__USE_POSIX


92 #unde‡
__USE_POSIX2


93 #unde‡
__USE_POSIX199309


94 #unde‡
__USE_POSIX199506


95 #unde‡
__USE_XOPEN


96 #unde‡
__USE_XOPEN_EXTENDED


97 #unde‡
__USE_UNIX98


98 #unde‡
__USE_XOPEN2K


99 #unde‡
__USE_LARGEFILE


100 #unde‡
__USE_LARGEFILE64


101 #unde‡
__USE_FILE_OFFSET64


102 #unde‡
__USE_BSD


103 #unde‡
__USE_SVID


104 #unde‡
__USE_MISC


105 #unde‡
__USE_GNU


106 #unde‡
__USE_REENTRANT


107 #unde‡
__USE_FORTIFY_LEVEL


108 #unde‡
__FAVOR_BSD


109 #unde‡
__KERNEL_STRICT_NAMES


113 #i‚de‡
_LOOSE_KERNEL_NAMES


114 
	#__KERNEL_STRICT_NAMES


	)

118 
	#__USE_ANSI
 1

	)

127 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


128 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

129 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

131 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

136 #i‡
deföed
 
_BSD_SOURCE
 && \

137 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

138 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

139 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

140 
	#__FAVOR_BSD
 1

	)

144 #ifde‡
_GNU_SOURCE


145 #unde‡
_ISOC99_SOURCE


146 
	#_ISOC99_SOURCE
 1

	)

147 #unde‡
_POSIX_SOURCE


148 
	#_POSIX_SOURCE
 1

	)

149 #unde‡
_POSIX_C_SOURCE


150 
	#_POSIX_C_SOURCE
 199506L

	)

151 #unde‡
_XOPEN_SOURCE


152 
	#_XOPEN_SOURCE
 600

	)

153 #unde‡
_XOPEN_SOURCE_EXTENDED


154 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

155 #unde‡
_LARGEFILE64_SOURCE


156 
	#_LARGEFILE64_SOURCE
 1

	)

157 #unde‡
_BSD_SOURCE


158 
	#_BSD_SOURCE
 1

	)

159 #unde‡
_SVID_SOURCE


160 
	#_SVID_SOURCE
 1

	)

165 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

166 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

167 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

168 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

169 
	#_BSD_SOURCE
 1

	)

170 
	#_SVID_SOURCE
 1

	)

177 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

178 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

179 
	#__USE_ISOC99
 1

	)

184 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

185 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

186 
	#_POSIX_SOURCE
 1

	)

187 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

188 
	#_POSIX_C_SOURCE
 2

	)

190 
	#_POSIX_C_SOURCE
 199506L

	)

194 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


195 
	#__USE_POSIX
 1

	)

198 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


199 
	#__USE_POSIX2
 1

	)

202 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

203 
	#__USE_POSIX199309
 1

	)

206 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

207 
	#__USE_POSIX199506
 1

	)

210 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

211 
	#__USE_XOPEN2K
 1

	)

214 #ifdef 
_XOPEN_SOURCE


215 
	#__USE_XOPEN
 1

	)

216 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

217 
	#__USE_XOPEN_EXTENDED
 1

	)

218 
	#__USE_UNIX98
 1

	)

219 #unde‡
_LARGEFILE_SOURCE


220 
	#_LARGEFILE_SOURCE
 1

	)

221 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

222 
	#__USE_XOPEN2K
 1

	)

223 #unde‡
__USE_ISOC99


224 
	#__USE_ISOC99
 1

	)

227 #ifde‡
_XOPEN_SOURCE_EXTENDED


228 
	#__USE_XOPEN_EXTENDED
 1

	)

233 #ifde‡
_LARGEFILE_SOURCE


234 
	#__USE_LARGEFILE
 1

	)

237 #ifde‡
_LARGEFILE64_SOURCE


238 
	#__USE_LARGEFILE64
 1

	)

241 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

242 
	#__USE_FILE_OFFSET64
 1

	)

245 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


246 
	#__USE_MISC
 1

	)

249 #ifdef 
_BSD_SOURCE


250 
	#__USE_BSD
 1

	)

253 #ifdef 
_SVID_SOURCE


254 
	#__USE_SVID
 1

	)

257 #ifdef 
_GNU_SOURCE


258 
	#__USE_GNU
 1

	)

261 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


262 
	#__USE_REENTRANT
 1

	)

265 #i‡
_FORTIFY_SOURCE
 > 0 && 
__GNUC_PREREQ
 (4, 1Ë&& 
__OPTIMIZE__
 > 0

266 #i‡
_FORTIFY_SOURCE
 == 1

267 
	#__USE_FORTIFY_LEVEL
 1

	)

268 #ñi‡
_FORTIFY_SOURCE
 > 1

269 
	#__USE_FORTIFY_LEVEL
 2

	)

274 
	#__STDC_IEC_559__
 1

	)

275 
	#__STDC_IEC_559_COMPLEX__
 1

	)

278 
	#__STDC_ISO_10646__
 200009L

	)

286 #unde‡
__GNU_LIBRARY__


287 
	#__GNU_LIBRARY__
 6

	)

291 
	#__GLIBC__
 2

	)

292 
	#__GLIBC_MINOR__
 3

	)

294 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

295 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

298 #i‡
deföed
 
__GNUC__
 \

299 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

300 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

301 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

302 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

306 #i‚de‡
__ASSEMBLER__


307 #i‚de‡
_SYS_CDEFS_H


308 
	~<sys/cdefs.h
>

313 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


314 
	#__USE_LARGEFILE
 1

	)

315 
	#__USE_LARGEFILE64
 1

	)

321 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

322 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


323 
	#__USE_EXTERN_INLINES
 1

	)

331 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

147 
	#_IO_SKIPWS
 01

	)

148 
	#_IO_LEFT
 02

	)

149 
	#_IO_RIGHT
 04

	)

150 
	#_IO_INTERNAL
 010

	)

151 
	#_IO_DEC
 020

	)

152 
	#_IO_OCT
 040

	)

153 
	#_IO_HEX
 0100

	)

154 
	#_IO_SHOWBASE
 0200

	)

155 
	#_IO_SHOWPOINT
 0400

	)

156 
	#_IO_UPPERCASE
 01000

	)

157 
	#_IO_SHOWPOS
 02000

	)

158 
	#_IO_SCIENTIFIC
 04000

	)

159 
	#_IO_FIXED
 010000

	)

160 
	#_IO_UNITBUF
 020000

	)

161 
	#_IO_STDIO
 040000

	)

162 
	#_IO_DONT_CLOSE
 0100000

	)

163 
	#_IO_BOOLALPHA
 0200000

	)

166 
_IO_jump_t
; 
	g_IO_FILE
;

169 #ifde‡
_IO_MTSAFE_IO


170 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

171 
	~<bôs/°dio-lock.h
>

176 
	t_IO_lock_t
;

182 
	s_IO_m¨kî
 {

183 
_IO_m¨kî
 *
	m_√xt
;

184 
_IO_FILE
 *
	m_sbuf
;

188 
	m_pos
;

190 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

191 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

192 
	mpublic
:

193 
°ªamm¨kî
(
°ªambuf
 *
sb
);

194 ~
°ªamm¨kî
();

195 
ßvög
(Ë{  
	m_•os
 == -2; }

196 
dñè
(
°ªamm¨kî
&);

197 
dñè
();

202 
	e__codecvt_ªsu…


204 
	m__codecvt_ok
,

205 
	m__codecvt_∑πül
,

206 
	m__codecvt_îr‹
,

207 
	m__codecvt_noc⁄v


210 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


213 
	s_IO_codecvt


215 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

216 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

217 
	m__mb°©e_t
 *,

218 c⁄° 
	mwch¨_t
 *,

219 c⁄° 
	mwch¨_t
 *,

220 c⁄° 
	mwch¨_t
 **, *,

222 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *, *,

225 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

226 
	m__mb°©e_t
 *,

228 c⁄° **, 
	mwch¨_t
 *,

229 
	mwch¨_t
 *, wchar_t **);

230 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

231 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

232 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

233 c⁄° *, c⁄° *, 
	m_IO_size_t
);

234 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

236 
_IO_ic⁄v_t
 
	m__cd_ö
;

237 
_IO_ic⁄v_t
 
	m__cd_out
;

241 
	s_IO_wide_d©a


243 
wch¨_t
 *
	m_IO_ªad_±r
;

244 
wch¨_t
 *
	m_IO_ªad_íd
;

245 
wch¨_t
 *
	m_IO_ªad_ba£
;

246 
wch¨_t
 *
	m_IO_wrôe_ba£
;

247 
wch¨_t
 *
	m_IO_wrôe_±r
;

248 
wch¨_t
 *
	m_IO_wrôe_íd
;

249 
wch¨_t
 *
	m_IO_buf_ba£
;

250 
wch¨_t
 *
	m_IO_buf_íd
;

252 
wch¨_t
 *
	m_IO_ßve_ba£
;

253 
wch¨_t
 *
	m_IO_backup_ba£
;

255 
wch¨_t
 *
	m_IO_ßve_íd
;

257 
__mb°©e_t
 
	m_IO_°©e
;

258 
__mb°©e_t
 
	m_IO_œ°_°©e
;

259 
_IO_codecvt
 
	m_codecvt
;

261 
wch¨_t
 
	m_sh‹tbuf
[1];

263 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

267 
	s_IO_FILE
 {

268 
	m_Êags
;

269 
	#_IO_fûe_Êags
 
_Êags


	)

273 * 
	m_IO_ªad_±r
;

274 * 
	m_IO_ªad_íd
;

275 * 
	m_IO_ªad_ba£
;

276 * 
	m_IO_wrôe_ba£
;

277 * 
	m_IO_wrôe_±r
;

278 * 
	m_IO_wrôe_íd
;

279 * 
	m_IO_buf_ba£
;

280 * 
	m_IO_buf_íd
;

282 *
	m_IO_ßve_ba£
;

283 *
	m_IO_backup_ba£
;

284 *
	m_IO_ßve_íd
;

286 
_IO_m¨kî
 *
	m_m¨kîs
;

288 
_IO_FILE
 *
	m_chaö
;

290 
	m_fûío
;

292 
	m_blksize
;

294 
	m_Êags2
;

296 
_IO_off_t
 
	m_ﬁd_off£t
;

298 
	#__HAVE_COLUMN


	)

300 
	m_cur_cﬁumn
;

301 sig√d 
	m_vèbÀ_off£t
;

302 
	m_sh‹tbuf
[1];

306 
_IO_lock_t
 *
	m_lock
;

307 #ifde‡
_IO_USE_OLD_IO_FILE


310 
	s_IO_FILE_com∂ëe


312 
_IO_FILE
 
	m_fûe
;

314 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

315 
_IO_off64_t
 
	m_off£t
;

316 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


318 
_IO_codecvt
 *
	m_codecvt
;

319 
_IO_wide_d©a
 *
	m_wide_d©a
;

321 *
	m__∑d1
;

322 *
	m__∑d2
;

324 
	m_mode
;

326 
	m_unu£d2
[15 *  () - 2 *  (*)];

330 #i‚de‡
__˝lu•lus


331 
_IO_FILE
 
	t_IO_FILE
;

334 
	g_IO_FILE_∂us
;

336 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

337 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

338 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

339 #i‚de‡
_LIBC


340 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

341 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

342 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

344 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

345 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

346 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

354 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

362 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

363 
	tsize_t
 
	t__n
);

371 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

374 
	t__io_˛o£_‚
 (*
	t__cookõ
);

377 #ifde‡
_GNU_SOURCE


379 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

380 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

381 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

382 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

387 
__io_ªad_‚
 *
	mªad
;

388 
__io_wrôe_‚
 *
	mwrôe
;

389 
__io_£ek_‚
 *
	m£ek
;

390 
__io_˛o£_‚
 *
	m˛o£
;

391 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

392 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

394 
	g_IO_cookõ_fûe
;

397 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

398 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

402 #ifde‡
__˝lu•lus


406 
__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

407 
__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

408 
__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

409 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

410 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

411 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

413 #i‡ 
__GNUC__
 >= 3

414 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (ex¥,Ñes)

	)

416 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

419 
	#_IO_gëc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

421 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

422 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

423 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

424 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

425 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

426 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

427 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

428 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

429 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

431 
	#_IO_gëwc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

434 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

435 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

436 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

437 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

438 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

439 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

441 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

442 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

444 
_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

445 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

446 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

447 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

449 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

452 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

453 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

455 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

456 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

457 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

459 #ifde‡
_IO_MTSAFE_IO


460 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

461 
	#_IO_Êockfûe
(
_Â
) \

462 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

463 
	#_IO_fu∆ockfûe
(
_Â
) \

464 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

466 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

467 
	#_IO_Êockfûe
(
_Â
Ë

	)

468 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

469 
	#_IO_·rylockfûe
(
_Â
Ë

	)

470 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

471 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

474 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

475 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

476 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

477 
_IO_va_li°
Ë
__THROW
;

478 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

479 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

481 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

482 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

484 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

486 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


487 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

488 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

489 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

490 #i‡
__GNUC__
 >= 2

493 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


494 
	~<shlib-com∑t.h
>

495 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

496 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

497 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

498 c⁄° 
_IO_°dö_u£d
;

499 
wók_exã∫
 (
_IO_°dö_u£d
);

502 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


503 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

507 
	#_IO_fwide
(
__Â
, 
__mode
) \

508 ({ 
__ªsu…
 = (
__mode
); \

509 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

511 i‡((
__Â
)->
_mode
 == 0) \

513 (
__Â
)->
_mode
 = -1; \

514 
__ªsu…
 = (
__Â
)->
_mode
; \

516 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

517 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

519 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

520 
__ªsu…
; })

	)

523 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

524 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

525 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

526 
_IO_va_li°
Ë
__THROW
;

527 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

528 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

531 #ifde‡
__˝lu•lus


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_IPV6
 = 41,

56 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

57 
	mIPPROTO_ROUTING
 = 43,

58 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

59 
	mIPPROTO_FRAGMENT
 = 44,

60 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

61 
	mIPPROTO_RSVP
 = 46,

62 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

63 
	mIPPROTO_GRE
 = 47,

64 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

65 
	mIPPROTO_ESP
 = 50,

66 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

67 
	mIPPROTO_AH
 = 51,

68 
	#IPPROTO_AH
 
IPPROTO_AH


	)

69 
	mIPPROTO_ICMPV6
 = 58,

70 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

71 
	mIPPROTO_NONE
 = 59,

72 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

73 
	mIPPROTO_DSTOPTS
 = 60,

74 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

75 
	mIPPROTO_MTP
 = 92,

76 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

77 
	mIPPROTO_ENCAP
 = 98,

78 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

79 
	mIPPROTO_PIM
 = 103,

80 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

81 
	mIPPROTO_COMP
 = 108,

82 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

83 
	mIPPROTO_SCTP
 = 132,

84 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

85 
	mIPPROTO_RAW
 = 255,

86 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

87 
	mIPPROTO_MAX


92 
uöt16_t
 
	tö_p‹t_t
;

97 
	mIPPORT_ECHO
 = 7,

98 
	mIPPORT_DISCARD
 = 9,

99 
	mIPPORT_SYSTAT
 = 11,

100 
	mIPPORT_DAYTIME
 = 13,

101 
	mIPPORT_NETSTAT
 = 15,

102 
	mIPPORT_FTP
 = 21,

103 
	mIPPORT_TELNET
 = 23,

104 
	mIPPORT_SMTP
 = 25,

105 
	mIPPORT_TIMESERVER
 = 37,

106 
	mIPPORT_NAMESERVER
 = 42,

107 
	mIPPORT_WHOIS
 = 43,

108 
	mIPPORT_MTP
 = 57,

110 
	mIPPORT_TFTP
 = 69,

111 
	mIPPORT_RJE
 = 77,

112 
	mIPPORT_FINGER
 = 79,

113 
	mIPPORT_TTYLINK
 = 87,

114 
	mIPPORT_SUPDUP
 = 95,

117 
	mIPPORT_EXECSERVER
 = 512,

118 
	mIPPORT_LOGINSERVER
 = 513,

119 
	mIPPORT_CMDSERVER
 = 514,

120 
	mIPPORT_EFSSERVER
 = 520,

123 
	mIPPORT_BIFFUDP
 = 512,

124 
	mIPPORT_WHOSERVER
 = 513,

125 
	mIPPORT_ROUTESERVER
 = 520,

128 
	mIPPORT_RESERVED
 = 1024,

131 
	mIPPORT_USERRESERVED
 = 5000

136 
uöt32_t
 
	tö_addr_t
;

137 
	sö_addr


139 
ö_addr_t
 
	ms_addr
;

148 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

149 
	#IN_CLASSA_NET
 0xff000000

	)

150 
	#IN_CLASSA_NSHIFT
 24

	)

151 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

152 
	#IN_CLASSA_MAX
 128

	)

154 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

155 
	#IN_CLASSB_NET
 0xffff0000

	)

156 
	#IN_CLASSB_NSHIFT
 16

	)

157 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

158 
	#IN_CLASSB_MAX
 65536

	)

160 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

161 
	#IN_CLASSC_NET
 0xffffff00

	)

162 
	#IN_CLASSC_NSHIFT
 8

	)

163 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

165 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

166 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

168 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

169 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

172 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

174 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

176 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

179 
	#IN_LOOPBACKNET
 127

	)

181 #i‚de‡
INADDR_LOOPBACK


182 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

186 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

187 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

188 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

189 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

193 
	sö6_addr


197 
uöt8_t
 
	mu6_addr8
[16];

198 
uöt16_t
 
	mu6_addr16
[8];

199 
uöt32_t
 
	mu6_addr32
[4];

200 } 
	mö6_u
;

201 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

202 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

203 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

206 c⁄° 
ö6_addr
 
ö6addr_™y
;

207 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

208 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

209 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

211 
	#INET_ADDRSTRLEN
 16

	)

212 
	#INET6_ADDRSTRLEN
 46

	)

215 
	~<bôs/sockë.h
>

219 
	ssockaddr_ö


221 
__SOCKADDR_COMMON
 (
sö_
);

222 
ö_p‹t_t
 
	msö_p‹t
;

223 
ö_addr
 
	msö_addr
;

226 
	msö_zîo
[ (
sockaddr
) -

227 
__SOCKADDR_COMMON_SIZE
 -

228  (
ö_p‹t_t
) -

229  (
ö_addr
)];

233 
	ssockaddr_ö6


235 
__SOCKADDR_COMMON
 (
sö6_
);

236 
ö_p‹t_t
 
	msö6_p‹t
;

237 
uöt32_t
 
	msö6_Êowöfo
;

238 
ö6_addr
 
	msö6_addr
;

239 
uöt32_t
 
	msö6_sc›e_id
;

244 
	sù_mªq


247 
ö_addr
 
	mimr_mu…üddr
;

250 
ö_addr
 
	mimr_öãrÁ˚
;

253 
	sù_mªq_sour˚


256 
ö_addr
 
	mimr_mu…üddr
;

259 
ö_addr
 
	mimr_öãrÁ˚
;

262 
ö_addr
 
	mimr_sour˚addr
;

266 
	sùv6_mªq


269 
ö6_addr
 
	mùv6mr_mu…üddr
;

272 
	mùv6mr_öãrÁ˚
;

277 
	sgroup_ªq


280 
uöt32_t
 
	mgr_öãrÁ˚
;

283 
sockaddr_°‹age
 
	mgr_group
;

286 
	sgroup_sour˚_ªq


289 
uöt32_t
 
	mg§_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mg§_group
;

295 
sockaddr_°‹age
 
	mg§_sour˚
;

300 
	sù_msfûãr


303 
ö_addr
 
	mimsf_mu…üddr
;

306 
ö_addr
 
	mimsf_öãrÁ˚
;

309 
uöt32_t
 
	mimsf_fmode
;

312 
uöt32_t
 
	mimsf_num§c
;

314 
ö_addr
 
	mimsf_¶i°
[1];

317 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

318 -  (
ö_addr
) \

319 + (
num§c
Ë*  (
ö_addr
))

	)

321 
	sgroup_fûãr


324 
uöt32_t
 
	mgf_öãrÁ˚
;

327 
sockaddr_°‹age
 
	mgf_group
;

330 
uöt32_t
 
	mgf_fmode
;

333 
uöt32_t
 
	mgf_num§c
;

335 
sockaddr_°‹age
 
	mgf_¶i°
[1];

338 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

339 -  (
sockaddr_°‹age
) \

340 + ((
num§c
) \

341 *  (
sockaddr_°‹age
)))

	)

345 
	~<bôs/ö.h
>

354 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

359 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

360 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

362 
	~<ídün.h
>

365 
	~<bôs/byãsw≠.h
>

367 #ifde‡
__OPTIMIZE__


371 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


374 
	#¡ohl
(
x
Ë(x)

	)

375 
	#¡ohs
(
x
Ë(x)

	)

376 
	#ht⁄l
(
x
Ë(x)

	)

377 
	#ht⁄s
(
x
Ë(x)

	)

379 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


380 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

382 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

383 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

388 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

389 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

391 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

392 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

394 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

395 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

397 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

398 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

400 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

402 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

403 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

404 =
	`ht⁄l
 (0x„800000))

	)

406 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

407 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

408 =
	`ht⁄l
 (0x„c00000))

	)

410 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

411 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

412 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

413 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

415 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

416 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

417 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

418 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

419 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

421 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

425 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

428 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

431 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

432 
__THROW
;

435 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

436 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

437 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

439 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

440 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

441 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

443 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

444 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

445 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

447 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

448 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

449 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

451 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

452 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

453 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

456 
	sö6_pktöfo


458 
ö6_addr
 
ùi6_addr
;

459 
ùi6_ifödex
;

463 #ifde‡
__USE_GNU


465 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
Ë
__THROW
;

466 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

467 
__ty≥
Ë
__THROW
;

468 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

469 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

470 
__∂usy
Ë
__THROW
;

471 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

472 
__mu…x
, 
__∂usy
Ë
__THROW
;

473 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

474 
uöt8_t
 **
__çåp
Ë
__THROW
;

475 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

476 
uöt8_t
 **
__çåp
, 
__ty≥
Ë
__THROW
;

482 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

483 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

484 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

485 
__THROW
;

488 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

489 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

490 
uöt32_t
 
__num§c
,

491 
__c⁄°
 
ö_addr
 *
__¶i°
)

492 
__THROW
;

496 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

497 
__c⁄°
 
sockaddr
 *
__group
,

498 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

499 
uöt32_t
 *
__num§c
,

500 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

503 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

504 
__c⁄°
 
sockaddr
 *
__group
,

505 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

506 
uöt32_t
 
__num§c
,

507 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

510 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_MISC


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #ifde‡
__USE_MISC


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

153 #ifdef 
__USE_POSIX199309


154 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

155 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

156 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

162 
	#S_ISUID
 
__S_ISUID


	)

163 
	#S_ISGID
 
__S_ISGID


	)

165 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


167 
	#S_ISVTX
 
__S_ISVTX


	)

170 
	#S_IRUSR
 
__S_IREAD


	)

171 
	#S_IWUSR
 
__S_IWRITE


	)

172 
	#S_IXUSR
 
__S_IEXEC


	)

174 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

176 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


177 
	#S_IREAD
 
S_IRUSR


	)

178 
	#S_IWRITE
 
S_IWUSR


	)

179 
	#S_IEXEC
 
S_IXUSR


	)

182 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

183 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

184 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

186 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

188 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

189 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

190 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

192 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

195 #ifdef 
__USE_BSD


197 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

198 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

199 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

201 
	#S_BLKSIZE
 512

	)

205 #i‚de‡
__USE_FILE_OFFSET64


207 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

208 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

212 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

216 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

217 
	`__n⁄nuŒ
 ((1, 2));

218 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

219 
	`__n⁄nuŒ
 ((2));

221 
	#°©
 
°©64


	)

222 
	#f°©
 
f°©64


	)

225 #ifde‡
__USE_LARGEFILE64


226 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

227 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

228 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


232 #i‚de‡
__USE_FILE_OFFSET64


235 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

236 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

238 #ifde‡
__REDIRECT_NTH


239 
	`__REDIRECT_NTH
 (
l°©
,

240 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

242 
	`__n⁄nuŒ
 ((1, 2));

244 
	#l°©
 
l°©64


	)

247 #ifde‡
__USE_LARGEFILE64


248 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

249 
°©64
 *
__ª°ri˘
 
__buf
)

250 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

256 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

257 
__THROW
 
	`__n⁄nuŒ
 ((1));

259 #ifde‡
__USE_BSD


263 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

268 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


269 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

275 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

277 #ifdef 
__USE_GNU


280 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

284 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


291 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 #i‚de‡
_STAT_VER


316 
	#_STAT_VER
 0

	)

318 #i‚de‡
_MKNOD_VER


319 
	#_MKNOD_VER
 0

	)

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

325 
__THROW
 
	`__n⁄nuŒ
 ((3));

326 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

327 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

328 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

329 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

331 #ifde‡
__REDIRECT_NTH


332 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

333 
°©
 *
__°©_buf
), 
__fx°©64
)

334 
	`__n⁄nuŒ
 ((3));

335 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

336 
°©
 *
__°©_buf
), 
__x°©64
)

337 
	`__n⁄nuŒ
 ((2, 3));

338 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

339 
°©
 *
__°©_buf
), 
__lx°©64
)

340 
	`__n⁄nuŒ
 ((2, 3));

343 
	#__fx°©
 
__fx°©64


	)

344 
	#__x°©
 
__x°©64


	)

345 
	#__lx°©
 
__lx°©64


	)

349 #ifde‡
__USE_LARGEFILE64


350 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

351 
__THROW
 
	`__n⁄nuŒ
 ((3));

352 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

353 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

355 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

357 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

358 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

360 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

363 
__ölöe__
 

364 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

366  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

367 
	}
}

369 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


370 
__ölöe__
 

371 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

373  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

374 
	}
}

377 
__ölöe__
 

378 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

380  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

381 
	}
}

383 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


384 
__ölöe__
 

385 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

387  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

388 
	}
}

391 #i‡
deföed
 
__USE_LARGEFILE64
 \

392 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

393 || (
deföed
 
__REDIRECT_NTH
 && deföed 
__OPTIMIZE__
))

394 
__ölöe__
 

395 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

397  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

398 
	}
}

400 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


401 
__ölöe__
 

402 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

404  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

405 
	}
}

408 
__ölöe__
 

409 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

411  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

412 
	}
}

417 
__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_MREMAP
 1

	)

73 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

74 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

75 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

77 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

79 
	#_G_OPEN64
 
__›í64


	)

80 
	#_G_LSEEK64
 
__l£ek64


	)

81 
	#_G_MMAP64
 
__mm≠64


	)

82 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

85 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

87 
	#_G_BUFSIZ
 8192

	)

90 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

91 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

92 
	#_G_USING_THUNKS
 1

	)

93 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

94 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

97 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


98 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

100 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/socket.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/sockë.h
>

8 
	~<asm-i486/sockë.h
>

	@/usr/include/bits/byteswap.h

20 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


24 #i‚de‡
_BITS_BYTESWAP_H


25 
	#_BITS_BYTESWAP_H
 1

	)

28 
	#__bsw≠_c⁄°™t_16
(
x
) \

29 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

31 #ifde‡
__GNUC__


32 #i‡
__GNUC__
 >= 2

33 
	#__bsw≠_16
(
x
) \

34 (
__exãnsi⁄__
 \

35 ({ 
__v
, 
__x
 = (
x
); \

36 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

37 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

39 
	`__asm__
 ("rorw $8, %w0" \

40 : "Ù" (
__v
) \

41 : "0" (
__x
) \

43 
__v
; }))

	)

46 
	#__bsw≠_16
(
x
) \

47 (
__exãnsi⁄__
 \

48 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

51 
__ölöe
 

52 
	$__bsw≠_16
 (
__bsx
)

54  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

55 
	}
}

59 
	#__bsw≠_c⁄°™t_32
(
x
) \

60 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

61 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

63 #ifde‡
__GNUC__


64 #i‡
__GNUC__
 >= 2

67 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

68 && !
deföed
 
	g__≥¡ium4__


69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("rorw $8, %w0;" \

78 : "Ù" (
__v
) \

79 : "0" (
__x
) \

81 
__v
; }))

	)

83 
	#__bsw≠_32
(
x
) \

84 (
__exãnsi⁄__
 \

85 ({ 
__v
, 
__x
 = (
x
); \

86 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

87 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

89 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 
__ölöe
 

99 
	$__bsw≠_32
 (
__bsx
)

101  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

102 
	}
}

106 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

108 
	#__bsw≠_c⁄°™t_64
(
x
) \

109 ((((
x
) & 0xff00000000000000ull) >> 56) \

110 | (((
x
) & 0x00ff000000000000ull) >> 40) \

111 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

112 | (((
x
) & 0x000000ff00000000ull) >> 8) \

113 | (((
x
) & 0x00000000ff000000ull) << 8) \

114 | (((
x
) & 0x0000000000ff0000ull) << 24) \

115 | (((
x
) & 0x000000000000ff00ull) << 40) \

116 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

118 
	#__bsw≠_64
(
x
) \

119 (
__exãnsi⁄__
 \

120 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

121 
__l
[2]; } 
__w
, 
__r
; \

122 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

123 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

126 
__w
.
__Œ
 = (
x
); \

127 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

128 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

130 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_PKTINFO
 2

	)

109 
	#IPV6_HOPOPTS
 3

	)

110 
	#IPV6_DSTOPTS
 4

	)

111 
	#IPV6_RTHDR
 5

	)

112 
	#IPV6_PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

137 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

138 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

139 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

140 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

143 
	#IPV6_PMTUDISC_DONT
 0

	)

144 
	#IPV6_PMTUDISC_WANT
 1

	)

145 
	#IPV6_PMTUDISC_DO
 2

	)

148 
	#SOL_IPV6
 41

	)

149 
	#SOL_ICMPV6
 58

	)

152 
	#IPV6_RTHDR_LOOSE
 0

	)

153 
	#IPV6_RTHDR_STRICT
 1

	)

155 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_LINUX_OLD
 1

	)

25 
	#_STAT_VER_KERNEL
 1

	)

26 
	#_STAT_VER_SVR4
 2

	)

27 
	#_STAT_VER_LINUX
 3

	)

28 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

36 
	s°©


38 
__dev_t
 
	m°_dev
;

39 
	m__∑d1
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__öo_t
 
	m°_öo
;

43 
__öo_t
 
	m__°_öo
;

45 
__mode_t
 
	m°_mode
;

46 
__∆ök_t
 
	m°_∆ök
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 
__dev_t
 
	m°_rdev
;

50 
	m__∑d2
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	m°_size
;

54 
__off64_t
 
	m°_size
;

56 
__blksize_t
 
	m°_blksize
;

58 #i‚de‡
__USE_FILE_OFFSET64


59 
__blk˙t_t
 
	m°_blocks
;

61 
__blk˙t64_t
 
	m°_blocks
;

63 #ifde‡
__USE_MISC


70 
time•ec
 
	m°_©im
;

71 
time•ec
 
	m°_mtim
;

72 
time•ec
 
	m°_˘im
;

73 
	#°_©ime
 
°_©im
.
tv_£c


	)

74 
	#°_mtime
 
°_mtim
.
tv_£c


	)

75 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

77 
__time_t
 
	m°_©ime
;

78 
	m°_©imí£c
;

79 
__time_t
 
	m°_mtime
;

80 
	m°_mtimí£c
;

81 
__time_t
 
	m°_˘ime
;

82 
	m°_˘imí£c
;

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	m__unu£d4
;

86 
	m__unu£d5
;

88 
__öo64_t
 
	m°_öo
;

92 #ifde‡
__USE_LARGEFILE64


93 
	s°©64


95 
__dev_t
 
	m°_dev
;

96 
	m__∑d1
;

98 
__öo_t
 
	m__°_öo
;

99 
__mode_t
 
	m°_mode
;

100 
__∆ök_t
 
	m°_∆ök
;

101 
__uid_t
 
	m°_uid
;

102 
__gid_t
 
	m°_gid
;

103 
__dev_t
 
	m°_rdev
;

104 
	m__∑d2
;

105 
__off64_t
 
	m°_size
;

106 
__blksize_t
 
	m°_blksize
;

108 
__blk˙t64_t
 
	m°_blocks
;

109 #ifde‡
__USE_MISC


116 
time•ec
 
	m°_©im
;

117 
time•ec
 
	m°_mtim
;

118 
time•ec
 
	m°_˘im
;

120 
__time_t
 
	m°_©ime
;

121 
	m°_©imí£c
;

122 
__time_t
 
	m°_mtime
;

123 
	m°_mtimí£c
;

124 
__time_t
 
	m°_˘ime
;

125 
	m°_˘imí£c
;

127 
__öo64_t
 
	m°_öo
;

132 
	#_STATBUF_ST_BLKSIZE


	)

133 
	#_STATBUF_ST_RDEV


	)

135 
	#_STATBUF_ST_NSEC


	)

139 
	#__S_IFMT
 0170000

	)

142 
	#__S_IFDIR
 0040000

	)

143 
	#__S_IFCHR
 0020000

	)

144 
	#__S_IFBLK
 0060000

	)

145 
	#__S_IFREG
 0100000

	)

146 
	#__S_IFIFO
 0010000

	)

147 
	#__S_IFLNK
 0120000

	)

148 
	#__S_IFSOCK
 0140000

	)

152 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

153 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

154 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

158 
	#__S_ISUID
 04000

	)

159 
	#__S_ISGID
 02000

	)

160 
	#__S_ISVTX
 01000

	)

161 
	#__S_IREAD
 0400

	)

162 
	#__S_IWRITE
 0200

	)

163 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 
__S32_TYPE


	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‚de‡
_SYS_UIO_H


24 
	~<sys/ty≥s.h
>

38 
	#UIO_MAXIOV
 1024

	)

42 
	siovec


44 *
	miov_ba£
;

45 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/gnu/stubs.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

129 #ifde‡
__USE_ISOC99


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 
LONG_LONG_MIN


	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
LONG_LONG_MAX


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 
ULONG_LONG_MAX


	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë¯## 
U


	)

301 
	#UINT16_C
(
c
Ë¯## 
U


	)

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


45 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

46 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

47 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

49 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

50 
	#__THROW
 
	`throw
 ()

	)

51 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

53 
	#__THROW


	)

54 
	#__NTH
(
f˘
Ë
	)
fct

60 
	#__ölöe


	)

62 
	#__THROW


	)

63 
	#__NTH
(
f˘
Ë
	)
fct

65 
	#__c⁄°
 c⁄°

	)

66 
	#__sig√d
 sig√d

	)

67 
	#__vﬁ©ûe
 vﬁ©ûe

	)

73 
	#__P
(
¨gs
Ë
	)
args

74 
	#__PMT
(
¨gs
Ë
	)
args

79 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

80 
	#__STRING
(
x
Ë#x

	)

83 
	#__±r_t
 *

	)

84 
	#__l⁄g_doubÀ_t
 

	)

88 #ifdef 
__˝lu•lus


89 
	#__BEGIN_DECLS
 "C" {

	)

90 
	#__END_DECLS
 }

	)

92 
	#__BEGIN_DECLS


	)

93 
	#__END_DECLS


	)

102 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


103 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

104 
	#__END_NAMESPACE_STD
 }

	)

105 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

106 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

107 
	#__END_NAMESPACE_C99
 }

	)

108 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

113 
	#__BEGIN_NAMESPACE_STD


	)

114 
	#__END_NAMESPACE_STD


	)

115 
	#__USING_NAMESPACE_STD
(
«me
)

	)

116 
	#__BEGIN_NAMESPACE_C99


	)

117 
	#__END_NAMESPACE_C99


	)

118 
	#__USING_NAMESPACE_C99
(
«me
)

	)

123 #i‚de‡
__BOUNDED_POINTERS__


124 
	#__bounded


	)

125 
	#__unbounded


	)

126 
	#__±rvÆue


	)

131 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

132 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

136 #i‡
__GNUC_PREREQ
 (2,97)

138 
	#__Êex¨r
 []

	)

140 #ifde‡
__GNUC__


141 
	#__Êex¨r
 [0]

	)

143 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

144 
	#__Êex¨r
 []

	)

147 
	#__Êex¨r
 [1]

	)

163 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

165 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

166 #ifde‡
__˝lu•lus


167 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

168 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

170 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

171 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

173 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

174 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

187 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

188 
	#__©åibuã__
(
xyz
Ë

	)

194 #i‡
__GNUC_PREREQ
 (2,96)

195 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

197 
	#__©åibuã_mÆloc__


	)

203 #i‡
__GNUC_PREREQ
 (2,96)

204 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

206 
	#__©åibuã_puª__


	)

212 #i‡
__GNUC_PREREQ
 (3,1)

213 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

214 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

216 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

217 
	#__©åibuã_noölöe__


	)

221 #i‡
__GNUC_PREREQ
 (3,2)

222 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

224 
	#__©åibuã_dïªˇãd__


	)

233 #i‡
__GNUC_PREREQ
 (2,8)

234 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

236 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

243 #i‡
__GNUC_PREREQ
 (2,97)

244 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

245 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

247 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

252 #i‡
__GNUC_PREREQ
 (3,3)

253 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

255 
	#__n⁄nuŒ
(
∑øms
)

	)

262 #i‡!
__GNUC_PREREQ
 (2,8)

263 
	#__exãnsi⁄__


	)

267 #i‡!
__GNUC_PREREQ
 (2,92)

268 
	#__ª°ri˘


	)

274 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


275 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

277 #ifde‡
__GNUC__


278 
	#__ª°ri˘_¨r


	)

280 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

281 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

284 
	#__ª°ri˘_¨r


	)

	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__GLIBC_HAVE_LONG_LONG


167 
__exãnsi⁄__
 
	töt64_t
;

172 
	tu_öt8_t
;

173 
	tu_öt16_t
;

174 
	tu_öt32_t
;

175 #i‡
__GLIBC_HAVE_LONG_LONG


176 
__exãnsi⁄__
 
	tu_öt64_t
;

179 
	tªgi°î_t
;

184 
	#__ötN_t
(
N
, 
MODE
) \

185 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

186 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

187 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 #i‚de‡
	t__öt8_t_deföed


190 
	t__öt8_t_deföed


	)

191 
	t__ötN_t
 (8, 
	t__QI__
);

192 
__ötN_t
 (16, 
__HI__
);

193 
__ötN_t
 (32, 
__SI__
);

194 
__ötN_t
 (64, 
__DI__
);

197 
__u_ötN_t
 (8, 
__QI__
);

198 
__u_ötN_t
 (16, 
__HI__
);

199 
__u_ötN_t
 (32, 
__SI__
);

200 
__u_ötN_t
 (64, 
__DI__
);

202 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

208 
	#__BIT_TYPES_DEFINED__
 1

	)

211 #ifdef 
__USE_BSD


213 
	~<ídün.h
>

216 
	~<sys/£À˘.h
>

219 
	~<sys/sysma¸os.h
>

223 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


224 
__blksize_t
 
	tblksize_t
;

225 
	#__blksize_t_deföed


	)

229 #i‚de‡
__USE_FILE_OFFSET64


230 #i‚de‡
__blk˙t_t_deföed


231 
__blk˙t_t
 
	tblk˙t_t
;

232 
	#__blk˙t_t_deföed


	)

234 #i‚de‡
__fsblk˙t_t_deföed


235 
__fsblk˙t_t
 
	tfsblk˙t_t
;

236 
	#__fsblk˙t_t_deföed


	)

238 #i‚de‡
__fsfû˙t_t_deföed


239 
__fsfû˙t_t
 
	tfsfû˙t_t
;

240 
	#__fsfû˙t_t_deföed


	)

243 #i‚de‡
__blk˙t_t_deföed


244 
__blk˙t64_t
 
	tblk˙t_t
;

245 
	#__blk˙t_t_deföed


	)

247 #i‚de‡
__fsblk˙t_t_deföed


248 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

249 
	#__fsblk˙t_t_deföed


	)

251 #i‚de‡
__fsfû˙t_t_deföed


252 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

253 
	#__fsfû˙t_t_deföed


	)

257 #ifde‡
__USE_LARGEFILE64


258 
__blk˙t64_t
 
	tblk˙t64_t
;

259 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

260 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

265 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


266 
	~<bôs/±hªadty≥s.h
>

269 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

118 
	stime•ec


120 
__time_t
 
tv_£c
;

121 
tv_n£c
;

125 #unde‡
__√ed_time•ec


128 #ifdef 
_TIME_H


129 
__BEGIN_NAMESPACE_STD


131 
	stm


133 
tm_£c
;

134 
tm_mö
;

135 
tm_hour
;

136 
tm_mday
;

137 
tm_m⁄
;

138 
tm_yór
;

139 
tm_wday
;

140 
tm_yday
;

141 
tm_isd°
;

143 #ifdef 
__USE_BSD


144 
tm_gmtoff
;

145 
__c⁄°
 *
tm_z⁄e
;

147 
__tm_gmtoff
;

148 
__c⁄°
 *
__tm_z⁄e
;

151 
__END_NAMESPACE_STD


152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


153 
	$__USING_NAMESPACE_STD
(
tm
)

157 #ifde‡
__USE_POSIX199309


159 
	sôimî•ec


161 
time•ec
 
ô_öãrvÆ
;

162 
time•ec
 
ô_vÆue
;

166 
sigevít
;

170 #ifde‡
__USE_XOPEN2K


171 #i‚de‡
__pid_t_deföed


172 
__pid_t
 
	tpid_t
;

173 
	#__pid_t_deföed


	)

178 
__BEGIN_NAMESPACE_STD


181 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

184 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

187 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

188 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

191 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

197 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

198 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

199 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

200 
__END_NAMESPACE_STD


202 #ifde‡
__USE_XOPEN


205 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

207 
__THROW
;

210 #ifde‡
__USE_GNU


213 
	~<xloˇÀ.h
>

215 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

216 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

217 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

218 
__loˇÀ_t
 
__loc
Ë
__THROW
;

220 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

221 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

222 
__loˇÀ_t
 
__loc
Ë
__THROW
;

226 
__BEGIN_NAMESPACE_STD


229 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

233 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

234 
__END_NAMESPACE_STD


236 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


239 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

240 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

244 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

245 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
__BEGIN_NAMESPACE_STD


251 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

254 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

255 
__END_NAMESPACE_STD


257 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


262 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

263 *
__ª°ri˘
 
__buf
Ë
__THROW
;

266 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

272 *
__tz«me
[2];

273 
__daylight
;

274 
__timez⁄e
;

277 #ifdef 
__USE_POSIX


279 *
tz«me
[2];

283 
	$tz£t
 (Ë
__THROW
;

286 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


287 
daylight
;

288 
timez⁄e
;

291 #ifde‡
__USE_SVID


294 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

300 
	#__i¶óp
(
yór
) \

301 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

304 #ifde‡
__USE_MISC


309 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

312 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

315 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

319 #ifde‡
__USE_POSIX199309


324 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

325 
time•ec
 *
__ªmaöög
);

329 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

332 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

335 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

336 
__THROW
;

338 #ifde‡
__USE_XOPEN2K


343 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

344 
__c⁄°
 
time•ec
 *
__ªq
,

345 
time•ec
 *
__ªm
);

348 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

353 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

354 
sigevít
 *
__ª°ri˘
 
__evp
,

355 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

358 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

361 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

362 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

363 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

366 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

367 
__THROW
;

370 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

374 #ifde‡
__USE_XOPEN_EXTENDED


386 
gëd©e_îr
;

395 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

398 #ifde‡
__USE_GNU


409 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

410 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

413 
__END_DECLS


	@/usr/include/asm-i486/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/asm-x86_64/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

26 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


27 
	~<löuxthªads/öã∫Æs.h
>

31 #i‡
deföed
(
_LIBC
Ë|| deföed(
_IO_MTSAFE_IO
)

32 
±hªad_muãx_t
 
	t__libc_lock_t
;

33 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

34 #ifde‡
__USE_UNIX98


35 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

37 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

39 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

41 
__libc_lock_›aque__
 
	t__libc_lock_t
;

42 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

43 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

47 
±hªad_key_t
 
	t__libc_key_t
;

56 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_t
 
NAME
;

	)

58 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

59 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

60 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

62 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

63 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

74 #ifde‡
__LT_INITIALIZER_NOT_ZERO


75 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_lock_t
 
NAME
;

	)

82 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

83 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

87 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

88 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

89 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

90 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

92 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

93 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

94 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

95 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

97 #i‡
deföed
 
_LIBC
 && deföed 
IS_IN_lib±hªad


98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
ËFUNC 
	)
ARGS

100 #i‡
deföed
 
__PIC__
 || (deföed 
_LIBC
 && deföed 
SHARED
)

101 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

102 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

103 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

105 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

106 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

109 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


110 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
) \

111 ({
	`__buûtö_ex≥˘
 (
__libc_±hªad_fun˘i⁄s
.
±r_
##
FUNC
 !
NULL
, 0) \

112 ? 
__libc_±hªad_fun˘i⁄s
.
±r_
##
FUNC
 
ARGS
 : 
ELSE
; })

	)

114 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

119 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


120 
	#__libc_lock_öô
(
NAME
) \

122 (
NAME
).
__m_cou¡
 = 0; \

123 (
NAME
).
__m_ow√r
 = 
NULL
; \

124 (
NAME
).
__m_köd
 = 
PTHREAD_MUTEX_TIMED_NP
; \

125 (
NAME
).
__m_lock
.
__°©us
 = 0; \

126 (
NAME
).
__m_lock
.
__•ölock
 = 
__LT_SPINLOCK_INIT
; \

127 0; })

	)

129 
	#__libc_lock_öô
(
NAME
) \

130 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

132 
	#__libc_rwlock_öô
(
NAME
) \

133 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

136 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


137 
	#__libc_lock_öô_ªcursive
(
NAME
) \

139 (
NAME
).
muãx
.
__m_cou¡
 = 0; \

140 (
NAME
).
muãx
.
__m_ow√r
 = 
NULL
; \

141 (
NAME
).
muãx
.
__m_köd
 = 
PTHREAD_MUTEX_RECURSIVE_NP
; \

142 (
NAME
).
muãx
.
__m_lock
.
__°©us
 = 0; \

143 (
NAME
).
muãx
.
__m_lock
.
__•ölock
 = 
__LT_SPINLOCK_INIT
; \

144 0; })

	)

146 
	#__libc_lock_öô_ªcursive
(
NAME
) \

148 i‡(
__±hªad_muãx_öô
 !
NULL
) \

150 
±hªad_muãx©å_t
 
__©å
; \

151 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

152 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

153 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

154 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

156 } 0);

	)

158 
	#__πld_lock_öô_ªcursive
(
NAME
) \

159 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

164 
	#__libc_lock_föi
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

166 
	#__libc_rwlock_föi
(
NAME
) \

167 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

170 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

171 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

174 
	#__libc_lock_lock
(
NAME
) \

175 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

176 
	#__libc_rwlock_rdlock
(
NAME
) \

177 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

178 
	#__libc_rwlock_wæock
(
NAME
) \

179 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

182 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

185 
	#__libc_lock_åylock
(
NAME
) \

186 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

187 
	#__libc_rwlock_åyrdlock
(
NAME
) \

188 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

189 
	#__libc_rwlock_åywæock
(
NAME
) \

190 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

193 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

194 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

195 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

198 
	#__libc_lock_u∆ock
(
NAME
) \

199 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

200 
	#__libc_rwlock_u∆ock
(
NAME
) \

201 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

204 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

206 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


207 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

208 ++((
±hªad_muãx_t
 *)(
lock
))->
__m_cou¡
;

	)

210 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

211 --((
±hªad_muãx_t
 *)(
lock
))->
__m_cou¡
;

	)

213 
	#__πld_lock_lock_ªcursive
(
NAME
) \

214 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

216 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

217 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

219 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

220 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

224 #i‡
PTHREAD_ONCE_INIT
 == 0

227 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

228 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

230 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

231 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

235 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

237 i‡(
__±hªad_⁄˚
 !
NULL
) \

238 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

239 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

240 
	`INIT_FUNCTION
 (); \

241 (
ONCE_CONTROL
) = 2; \

243 } 0)

	)

247 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

248 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

249 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

250 i‡(
_avaû
) { \

251 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

252 }

	)

255 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

256 i‡(
_avaû
) { \

257 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

259 }

	)

262 
	#__libc_˛ónup_íd
(
DOIT
) \

263 i‡(
_avaû
) { \

264 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

265 }

	)

267 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

268 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

269 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

271 
	#__libc_˛ónup_p›
(
execuã
) \

272 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

273 }

	)

276 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

277 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

280 
	#__libc_gë•ecific
(
KEY
) \

281 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

284 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

285 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

289 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

290 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

295 
__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

296 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

298 
__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

300 
__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

302 
__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

304 
__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

306 
__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

308 
__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

310 
__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

311 
__köd
);

313 #ifde‡
__USE_UNIX98


314 
__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

315 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

317 
__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

319 
__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

321 
__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

323 
__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

325 
__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

327 
__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

330 
__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

331 (*
__de°r_fun˘i⁄
) (*));

333 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

334 
__c⁄°
 *
__poöãr
);

336 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

338 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

339 (*
__öô_routöe
) ());

341 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

342 (*
__∑ª¡
) (),

343 (*
__chûd
) ());

349 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


350 #ifde‡
wók_exã∫


351 #i‡
_LIBC


352 
	~<bp-sym.h
>

354 
	#BP_SYM
 (
sym
Ë
	)
sym

356 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

357 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

358 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

359 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

360 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

361 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

362 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

363 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

364 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

365 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

366 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

367 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

368 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

369 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

370 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

371 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

372 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

373 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

374 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

375 
	$wók_exã∫
 (
__±hªad_öôülize
)

376 
	$wók_exã∫
 (
__±hªad_©f‹k
)

377 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push
))

378 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›
))

379 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

380 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

382 #¥agm®
wók
 
__±hªad_muãx_öô


383 #¥agm®
wók
 
__±hªad_muãx_de°roy


384 #¥agm®
wók
 
__±hªad_muãx_lock


385 #¥agm®
wók
 
__±hªad_muãx_åylock


386 #¥agm®
wók
 
__±hªad_muãx_u∆ock


387 #¥agm®
wók
 
__±hªad_muãx©å_öô


388 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


389 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


390 #¥agm®
wók
 
__±hªad_rwlock_de°roy


391 #¥agm®
wók
 
__±hªad_rwlock_rdlock


392 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


393 #¥agm®
wók
 
__±hªad_rwlock_wæock


394 #¥agm®
wók
 
__±hªad_rwlock_åywæock


395 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


396 #¥agm®
wók
 
__±hªad_key_¸óã


397 #¥agm®
wók
 
__±hªad_£t•ecific


398 #¥agm®
wók
 
__±hªad_gë•ecific


399 #¥agm®
wók
 
__±hªad_⁄˚


400 #¥agm®
wók
 
__±hªad_öôülize


401 #¥agm®
wók
 
__±hªad_©f‹k


402 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


403 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


404 #¥agm®
wók
 
_±hªad_˛ónup_push


405 #¥agm®
wók
 
_±hªad_˛ónup_p›


411 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/pthreadtypes.h

15 #i‡!
deföed
 
_BITS_TYPES_H
 && !deföed 
_PTHREAD_H


19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__√ed_sched∑øm


	)

23 
	~<bôs/sched.h
>

25 
	t__©omic_lock_t
;

28 
	s_±hªad_Á°lock


30 
	m__°©us
;

31 
__©omic_lock_t
 
	m__•ölock
;

35 #i‚de‡
_PTHREAD_DESCR_DEFINED


37 
_±hªad_des¸_°ru˘
 *
	t_±hªad_des¸
;

38 
	#_PTHREAD_DESCR_DEFINED


	)

43 
	s__±hªad_©å_s


45 
	m__dëach°©e
;

46 
	m__schedpﬁicy
;

47 
__sched_∑øm
 
	m__sched∑øm
;

48 
	m__öhîôsched
;

49 
	m__sc›e
;

50 
size_t
 
	m__gu¨dsize
;

51 
	m__°ackaddr_£t
;

52 *
	m__°ackaddr
;

53 
size_t
 
	m__°acksize
;

54 } 
	t±hªad_©å_t
;

59 #ifde‡
__GLIBC_HAVE_LONG_LONG


60 
__exãnsi⁄__
 
	t__±hªad_c⁄d_Æign_t
;

62 
	t__±hªad_c⁄d_Æign_t
;

67 
_±hªad_Á°lock
 
	m__c_lock
;

68 
_±hªad_des¸
 
	m__c_waôög
;

69 
	m__∑ddög
[48 -  (
_±hªad_Á°lock
)

70 -  (
_±hªad_des¸
Ë-  (
__±hªad_c⁄d_Æign_t
)];

71 
__±hªad_c⁄d_Æign_t
 
	m__Æign
;

72 } 
	t±hªad_c⁄d_t
;

78 
	m__dummy
;

79 } 
	t±hªad_c⁄d©å_t
;

82 
	t±hªad_key_t
;

90 
	m__m_ª£rved
;

91 
	m__m_cou¡
;

92 
_±hªad_des¸
 
	m__m_ow√r
;

93 
	m__m_köd
;

94 
_±hªad_Á°lock
 
	m__m_lock
;

95 } 
	t±hªad_muãx_t
;

101 
	m__muãxköd
;

102 } 
	t±hªad_muãx©å_t
;

106 
	t±hªad_⁄˚_t
;

109 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


111 
	s_±hªad_rwlock_t


113 
_±hªad_Á°lock
 
	m__rw_lock
;

114 
	m__rw_ªadîs
;

115 
_±hªad_des¸
 
	m__rw_wrôî
;

116 
_±hªad_des¸
 
	m__rw_ªad_waôög
;

117 
_±hªad_des¸
 
	m__rw_wrôe_waôög
;

118 
	m__rw_köd
;

119 
	m__rw_psh¨ed
;

120 } 
	t±hªad_rwlock_t
;

126 
	m__lockköd
;

127 
	m__psh¨ed
;

128 } 
	t±hªad_rwlock©å_t
;

131 #ifde‡
__USE_XOPEN2K


133 vﬁ©ûê
	t±hªad_•ölock_t
;

137 
_±hªad_Á°lock
 
	m__ba_lock
;

138 
	m__ba_ªquúed
;

139 
	m__ba_¥e£¡
;

140 
_±hªad_des¸
 
	m__ba_waôög
;

141 } 
	t±hªad_b¨rõr_t
;

145 
	m__psh¨ed
;

146 } 
	t±hªad_b¨rõøâr_t
;

152 
	t±hªad_t
;

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__exãnsi⁄__


30 
__ölöe
 
	$gnu_dev_maj‹
 (
__dev
)

31 
__THROW
;

32 
__exãnsi⁄__


33 
__ölöe
 
	$gnu_dev_mö‹
 (
__dev
)

34 
__THROW
;

35 
__exãnsi⁄__


36 
__ölöe
 
	$gnu_dev_makedev
 (
__maj‹
,

37 
__mö‹
)

38 
__THROW
;

40 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

41 
__exãnsi⁄__
 
__ölöe
 

42 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

44  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

45 
	}
}

47 
__exãnsi⁄__
 
__ölöe
 

48 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

50  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

51 
	}
}

53 
__exãnsi⁄__
 
__ölöe
 

54 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

56  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

57 | (((Ë(
__mö‹
 & ~0xff)) << 12)

58 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

59 
	}
}

64 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

65 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

66 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


323 
__ölöe
 
size_t


324 
	`__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

325 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

326 {  (
__ps
 !
NULL


327 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

330 
__BEGIN_NAMESPACE_C99


333 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

334 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

335 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

339 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

340 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

341 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

342 
__END_NAMESPACE_C99


345 #ifdef 
__USE_GNU


348 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

349 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

350 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

354 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

355 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

356 
size_t
 
__nwc
, size_à
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

362 #ifde‡
__USE_XOPEN


364 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

368 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

372 
__BEGIN_NAMESPACE_C99


375 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

376 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

378 #ifde‡
__USE_ISOC99


380 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

381 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

382 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

383 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

389 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

390 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

394 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

395 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

396 
__THROW
;

398 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

401 
__exãnsi⁄__


402 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

403 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

404 
__THROW
;

408 
__exãnsi⁄__


409 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

410 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

411 
__ba£
Ë
__THROW
;

413 
__END_NAMESPACE_C99


415 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


418 
__exãnsi⁄__


419 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

420 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

421 
__THROW
;

425 
__exãnsi⁄__


426 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

427 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

428 
__ba£
Ë
__THROW
;

431 #ifde‡
__USE_GNU


445 
	~<xloˇÀ.h
>

449 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

450 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

451 
__loˇÀ_t
 
__loc
Ë
__THROW
;

453 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

455 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

457 
__exãnsi⁄__


458 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

459 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

460 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

462 
__exãnsi⁄__


463 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

464 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

465 
__ba£
, 
__loˇÀ_t
 
__loc
)

466 
__THROW
;

468 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

470 
__THROW
;

472 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

473 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

474 
__THROW
;

476 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

478 
__loˇÀ_t
 
__loc
Ë
__THROW
;

484 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

485 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

486 
__THROW
;

487 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

489 
__THROW
;

490 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__group
Ë
__THROW
;

494 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


495 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

496 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

497 
__ba£
, 
__group
Ë
__THROW
;

498 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

500 #i‚de‡
__wc°oul_öã∫Æ_deföed


501 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

502 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

503 
__ba£
, 
__group
Ë
__THROW
;

504 
	#__wc°oul_öã∫Æ_deföed
 1

	)

506 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


507 
__exãnsi⁄__


508 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

509 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

510 
__ba£
, 
__group
Ë
__THROW
;

511 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

513 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


514 
__exãnsi⁄__


515 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

516 
__ª°ri˘
 
__≈å
,

517 
wch¨_t
 **

518 
__ª°ri˘
 
__íd±r
,

519 
__ba£
,

520 
__group
Ë
__THROW
;

521 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

525 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

527 
__BEGIN_NAMESPACE_C99


529 
__ölöe
 

530 
	`__NTH
 (
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

532 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

533 
__ölöe
 

534 
__NTH
 (
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

536 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

537 
__ölöe
 

538 
__NTH
 (
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

539 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

540 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

541 
__END_NAMESPACE_C99


543 #ifde‡
__USE_GNU


544 
__ölöe
 

545 
__NTH
 (
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

546 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

547 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

548 
__ölöe
 

549 
__NTH
 (
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
))

551 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

554 
__exãnsi⁄__


555 
__ölöe
 

556 
__NTH
 (
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

558 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

559 
__exãnsi⁄__


560 
__ölöe
 

561 
__NTH
 (
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

562 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
))

563 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

568 #ifdef 
__USE_GNU


571 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

575 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

576 
__THROW
;

581 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_C99


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 
__END_NAMESPACE_C99


650 #ifde‡
__USE_ISOC99


651 
__BEGIN_NAMESPACE_C99


657 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
)

665 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
)

669 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
)

672 
__THROW
 ;

674 
__END_NAMESPACE_C99


678 
__BEGIN_NAMESPACE_C99


683 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

684 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

690 
wöt_t
 
	`gëwch¨
 ();

697 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

698 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

704 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

712 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

713 
__FILE
 *
__ª°ri˘
 
__°ªam
);

719 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

720 
__FILE
 *
__ª°ri˘
 
__°ªam
);

727 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

728 
__END_NAMESPACE_C99


731 #ifde‡
__USE_GNU


739 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

740 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

748 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

756 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

775 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

776 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
__BEGIN_NAMESPACE_C99


793 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

794 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

795 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

796 
__END_NAMESPACE_C99


798 #ifde‡
__USE_GNU


799 
	~<xloˇÀ.h
>

803 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

804 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

805 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

806 
__loˇÀ_t
 
__loc
Ë
__THROW
;

815 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


816 
	#__√ed_iswxxx


	)

817 
	~<w˘y≥.h
>

820 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/asm/sockios.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/sockios.h
>

8 
	~<asm-i486/sockios.h
>

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 
	#PTHREAD_THREADS_MAX
 16384

	)

71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#TIMER_MAX
 256

	)

80 
	#DELAYTIMER_MAX
 2147483647

	)

83 
	#TTY_NAME_MAX
 32

	)

86 
	#LOGIN_NAME_MAX
 256

	)

89 
	#HOST_NAME_MAX
 64

	)

92 
	#MQ_PRIO_MAX
 32768

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_MISC


35 
	#CSIGNAL
 0x000000f‡

	)

36 
	#CLONE_VM
 0x00000100

	)

37 
	#CLONE_FS
 0x00000200

	)

38 
	#CLONE_FILES
 0x00000400

	)

39 
	#CLONE_SIGHAND
 0x00000800

	)

40 
	#CLONE_PTRACE
 0x00002000

	)

41 
	#CLONE_VFORK
 0x00004000

	)

43 
	#CLONE_PARENT
 0x00008000

	)

45 
	#CLONE_THREAD
 0x00010000

	)

46 
	#CLONE_NEWNS
 0x00020000

	)

47 
	#CLONE_SYSVSEM
 0x00040000

	)

48 
	#CLONE_SETTLS
 0x00080000

	)

49 
	#CLONE_PARENT_SETTID
 0x00100000

	)

51 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

53 
	#CLONE_DETACHED
 0x00400000

	)

54 
	#CLONE_UNTRACED
 0x00800000

	)

56 
	#CLONE_CHILD_SETTID
 0x01000000

	)

58 
	#CLONE_STOPPED
 0x02000000

	)

62 
	ssched_∑øm


64 
	m__sched_¥i‹ôy
;

67 
	g__BEGIN_DECLS


70 #ifde‡
__USE_MISC


71 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

72 
__Êags
, *
__¨g
Ë
__THROW
;

75 
__END_DECLS


79 #i‡!
deföed
 
__deföed_sched∑øm
 \

80 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

81 
	#__deföed_sched∑øm
 1

	)

83 
	s__sched_∑øm


85 
__sched_¥i‹ôy
;

87 #unde‡
__√ed_sched∑øm


91 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


92 
	#__˝u_£t_t_deföed


	)

94 
	#__CPU_SETSIZE
 1024

	)

95 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

98 
	t__˝u_mask
;

101 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

102 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

107 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

108 } 
	t˝u_£t_t
;

111 
	#__CPU_ZERO
(
˝u£ç
) \

113 
__i
; \

114 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

115 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

116 
__¨r
->
__bôs
[
__i
] = 0; \

117 
	}
} 0)

	)

118 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

119 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

120 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

121 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

122 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

123 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/pthread.h

15 #i‚de‡
_PTHREAD_H


16 
	#_PTHREAD_H
 1

	)

18 
	~<„©uªs.h
>

20 
	~<sched.h
>

21 
	~<time.h
>

23 
	#__√ed_sig£t_t


	)

24 
	~<sig«l.h
>

25 
	~<bôs/±hªadty≥s.h
>

26 
	~<bôs/öô•ö.h
>

29 
	g__BEGIN_DECLS


33 
	#PTHREAD_MUTEX_INITIALIZER
 \

34 {0, 0, 0, 
PTHREAD_MUTEX_TIMED_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

35 #ifde‡
__USE_GNU


36 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

37 {0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

38 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

39 {0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

40 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

41 {0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__LOCK_ALT_INITIALIZER
}

	)

44 
	#PTHREAD_COND_INITIALIZER
 {
__LOCK_ALT_INITIALIZER
, 0, "", 0}

	)

46 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


47 
	#PTHREAD_RWLOCK_INITIALIZER
 \

48 { 
__LOCK_ALT_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

49 
PTHREAD_RWLOCK_DEFAULT_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

51 #ifde‡
__USE_GNU


52 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

53 { 
__LOCK_ALT_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

54 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

61 
	mPTHREAD_CREATE_JOINABLE
,

62 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

63 
	mPTHREAD_CREATE_DETACHED


64 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

69 
	mPTHREAD_INHERIT_SCHED
,

70 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

71 
	mPTHREAD_EXPLICIT_SCHED


72 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

77 
	mPTHREAD_SCOPE_SYSTEM
,

78 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

79 
	mPTHREAD_SCOPE_PROCESS


80 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

85 
	mPTHREAD_MUTEX_TIMED_NP
,

86 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

87 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

88 
	mPTHREAD_MUTEX_ADAPTIVE_NP


89 #ifde‡
__USE_UNIX98


91 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

92 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

93 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

94 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


96 #ifde‡
__USE_GNU


98 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_ADAPTIVE_NP


104 
	mPTHREAD_PROCESS_PRIVATE
,

105 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

106 
	mPTHREAD_PROCESS_SHARED


107 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

110 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


113 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

114 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

115 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

116 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_WRITER_NP


120 
	#PTHREAD_ONCE_INIT
 0

	)

124 #ifde‡
__USE_XOPEN2K


126 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

131 
	s_±hªad_˛ónup_buf„r


133 (*
	m__routöe
) (*);

134 *
	m__¨g
;

135 
	m__ˇn˚…y≥
;

136 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

143 
	mPTHREAD_CANCEL_ENABLE
,

144 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

145 
	mPTHREAD_CANCEL_DISABLE


146 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

150 
	mPTHREAD_CANCEL_DEFERRED
,

151 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

152 
	mPTHREAD_CANCEL_ASYNCHRONOUS


153 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

155 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

163 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__thªadp
,

164 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

165 *(*
__°¨t_routöe
) (*),

166 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

169 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
;

172 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

175 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

180 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

186 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

194 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

197 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

200 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

201 
__dëach°©e
Ë
__THROW
;

204 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

205 *
__dëach°©e
Ë
__THROW
;

208 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

209 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


210 
__∑øm
Ë
__THROW
;

213 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


214 
__©å
,

215 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

216 
__THROW
;

219 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

220 
__THROW
;

223 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


224 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

225 
__THROW
;

228 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

229 
__öhîô
Ë
__THROW
;

232 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


233 
__©å
, *
__ª°ri˘
 
__öhîô
)

234 
__THROW
;

237 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

238 
__THROW
;

241 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

242 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

244 #ifde‡
__USE_UNIX98


246 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

247 
size_t
 
__gu¨dsize
Ë
__THROW
;

250 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


251 
__©å
, 
size_t
 *
__ª°ri˘
 
__gu¨dsize
)

252 
__THROW
;

259 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

260 *
__°ackaddr
Ë
__THROW
;

263 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


264 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

265 
__THROW
;

267 #ifde‡
__USE_XOPEN2K


271 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

272 
size_t
 
__°acksize
Ë
__THROW
;

275 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

276 **
__ª°ri˘
 
__°ackaddr
,

277 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

283 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

284 
size_t
 
__°acksize
Ë
__THROW
;

287 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


288 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

289 
__THROW
;

291 #ifde‡
__USE_GNU


295 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

302 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

303 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

304 
__THROW
;

307 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

308 *
__ª°ri˘
 
__pﬁicy
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
;

312 #ifde‡
__USE_UNIX98


314 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

317 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

320 #ifde‡
__USE_GNU


325 
	$±hªad_yõld
 (Ë
__THROW
;

332 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

333 
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


334 
__muãx_©å
Ë
__THROW
;

337 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

340 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

343 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

345 #ifde‡
__USE_XOPEN2K


347 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

348 
__c⁄°
 
time•ec
 *
__ª°ri˘


349 
__ab°ime
Ë
__THROW
;

353 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

360 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

363 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

366 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

367 
__ª°ri˘
 
__©å
,

368 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

371 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

372 
__psh¨ed
Ë
__THROW
;

374 #ifde‡
__USE_UNIX98


378 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

379 
__THROW
;

382 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


383 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

391 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

392 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


393 
__c⁄d_©å
Ë
__THROW
;

396 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

399 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

402 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

406 
	`±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

407 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
);

413 
	`±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

414 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

415 
__c⁄°
 
time•ec
 *
__ª°ri˘


416 
__ab°ime
);

421 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

424 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

427 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

428 
__ª°ri˘
 
__©å
,

429 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

432 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

433 
__psh¨ed
Ë
__THROW
;

436 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


441 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

442 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


443 
__©å
Ë
__THROW
;

446 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

449 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

452 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

454 #ifde‡
__USE_XOPEN2K


456 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

457 
__c⁄°
 
time•ec
 *
__ª°ri˘


458 
__ab°ime
Ë
__THROW
;

462 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

465 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

467 #ifde‡
__USE_XOPEN2K


469 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

470 
__c⁄°
 
time•ec
 *
__ª°ri˘


471 
__ab°ime
Ë
__THROW
;

475 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

481 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

484 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

487 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

488 
__ª°ri˘
 
__©å
,

489 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

492 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

493 
__psh¨ed
Ë
__THROW
;

496 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
,

497 *
__¥ef
Ë
__THROW
;

500 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

501 
__¥ef
Ë
__THROW
;

504 #ifde‡
__USE_XOPEN2K


510 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

511 
__THROW
;

514 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

517 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

520 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

523 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

528 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

529 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


530 
__©å
, 
__cou¡
Ë
__THROW
;

532 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

534 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

536 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

538 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

539 
__ª°ri˘
 
__©å
,

540 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

542 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

543 
__psh¨ed
Ë
__THROW
;

545 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

557 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

558 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

561 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

564 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

565 
__c⁄°
 *
__poöãr
Ë
__THROW
;

568 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

580 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

581 (*
__öô_routöe
) ());

588 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

592 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

595 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__ˇn˚…hªad
);

600 
	`±hªad_ã°ˇn˚l
 ();

610 
	#±hªad_˛ónup_push
(
routöe
,
¨g
) \

611 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

612 
	`_±hªad_˛ónup_push
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

614 
	`_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

615 (*
__routöe
) (*),

616 *
__¨g
Ë
__THROW
;

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
	`_±hªad_˛ónup_p›
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

624 
	$_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

625 
__execuã
Ë
__THROW
;

630 #ifde‡
__USE_GNU


631 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
,
¨g
) \

632 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

633 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

635 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

636 (*
__routöe
) (*),

637 *
__¨g
Ë
__THROW
;

643 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

644 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

646 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

647 
__execuã
Ë
__THROW
;

651 #ifde‡
__USE_XOPEN2K


653 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

654 
__˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

659 
	~<bôs/sigthªad.h
>

675 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

676 (*
__∑ª¡
) (),

677 (*
__chûd
Ë()Ë
__THROW
;

682 
	$±hªad_kûl_Ÿhî_thªads_≈
 (Ë
__THROW
;

684 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

47 
__END_NAMESPACE_C99


52 #i‚de‡
WEOF


53 
	#WEOF
 (0xffffffffu)

	)

56 #unde‡
__√ed_iswxxx


61 #i‚de‡
__iswxxx_deföed


62 
	#__iswxxx_deföed
 1

	)

64 
__BEGIN_NAMESPACE_C99


67 
	tw˘y≥_t
;

68 
__END_NAMESPACE_C99


70 #i‚de‡
_ISwbô


75 
	~<ídün.h
>

76 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


77 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

79 
	#_ISwbô
(
bô
) \

80 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

81 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

82 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

83 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

88 
__ISwuµî
 = 0,

89 
__ISwlowî
 = 1,

90 
__ISwÆpha
 = 2,

91 
__ISwdigô
 = 3,

92 
__ISwxdigô
 = 4,

93 
__ISw•a˚
 = 5,

94 
__ISw¥öt
 = 6,

95 
__ISwgøph
 = 7,

96 
__ISwbœnk
 = 8,

97 
__ISw˙ål
 = 9,

98 
__ISwpun˘
 = 10,

99 
__ISwÆnum
 = 11,

101 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

102 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

103 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

104 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

105 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

106 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

107 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

108 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

109 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

110 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

111 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

112 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

117 
__BEGIN_DECLS


119 
__BEGIN_NAMESPACE_C99


126 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

132 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

135 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

139 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

143 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

148 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

161 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

166 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

176 #ifde‡
__USE_ISOC99


177 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

186 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

190 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

191 
__END_NAMESPACE_C99


198 
__BEGIN_NAMESPACE_C99


201 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

202 
__END_NAMESPACE_C99


203 #ifde‡
__USE_GNU


204 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

207 
__BEGIN_NAMESPACE_C99


209 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

213 
__END_NAMESPACE_C99


215 
__END_DECLS


222 #ifde‡
_WCTYPE_H


228 
__BEGIN_DECLS


230 
__BEGIN_NAMESPACE_C99


233 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

236 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

237 
__END_NAMESPACE_C99


239 #ifde‡
__USE_GNU


241 
	~<xloˇÀ.h
>

245 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

251 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

254 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

258 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

262 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

267 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

290 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

295 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

299 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

300 
__THROW
;

304 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

305 
__THROW
;

313 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

316 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

320 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

321 
__THROW
;

324 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

325 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

329 
__END_DECLS


	@/usr/include/asm-i486/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/asm-x86_64/sockios.h

1 #i‚de‡
__ARCH_X8664_SOCKIOS__


2 
	#__ARCH_X8664_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/bits/initspin.h

23 
	#__LT_SPINLOCK_INIT
 0

	)

26 
	#__LOCK_INITIALIZER
 ((
_±hªad_Á°lock
){ 0, 
__LT_SPINLOCK_INIT
 })

	)

27 
	#__LOCK_ALT_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

28 
	#__ALT_LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

29 
	#__ATOMIC_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

16 
	#XATTR_NAME_MAX
 255

	)

17 
	#XATTR_SIZE_MAX
 65536

	)

18 
	#XATTR_LIST_MAX
 65536

	)

20 
	#RTSIG_MAX
 32

	)

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


346 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

348 
	~<bôs/sig°ack.h
>

349 #ifde‡
__USE_XOPEN


351 
	~<sys/uc⁄ãxt.h
>

357 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

358 
__THROW
 
__©åibuã_dïªˇãd__
;

362 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

363 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

367 #ifde‡
__USE_XOPEN_EXTENDED


371 
	$sighﬁd
 (
__sig
Ë
__THROW
;

374 
	$sigªl£
 (
__sig
Ë
__THROW
;

377 
	$sigign‹e
 (
__sig
Ë
__THROW
;

380 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

383 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


386 
	~<bôs/±hªadty≥s.h
>

387 
	~<bôs/sigthªad.h
>

394 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

396 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

400 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/sigcontext.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/sigc⁄ãxt.h
>

8 
	~<asm-i486/sigc⁄ãxt.h
>

	@/usr/include/asm-i486/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

4 
	~<löux/compûî.h
>

20 
	s_Âªg
 {

21 
	msignifiˇnd
[4];

22 
	mexp⁄ít
;

25 
	s_Âxªg
 {

26 
	msignifiˇnd
[4];

27 
	mexp⁄ít
;

28 
	m∑ddög
[3];

31 
	s_xmmªg
 {

32 
	mñemít
[4];

35 
	s_Â°©e
 {

37 
	mcw
;

38 
	msw
;

39 
	mèg
;

40 
	mùoff
;

41 
	mcs£l
;

42 
	md©aoff
;

43 
	md©a£l
;

44 
_Âªg
 
	m_°
[8];

45 
	m°©us
;

46 
	mmagic
;

49 
	m_fx§_ív
[6];

50 
	mmxc§
;

51 
	mª£rved
;

52 
_Âxªg
 
	m_fx§_°
[8];

53 
_xmmªg
 
	m_xmm
[8];

54 
	m∑ddög
[56];

57 
	#X86_FXSR_MAGIC
 0x0000

	)

59 
	ssigc⁄ãxt
 {

60 
	mgs
, 
	m__gsh
;

61 
	mfs
, 
	m__fsh
;

62 
	mes
, 
	m__esh
;

63 
	mds
, 
	m__dsh
;

64 
	medi
;

65 
	mesi
;

66 
	mebp
;

67 
	me•
;

68 
	mebx
;

69 
	medx
;

70 
	mecx
;

71 
	móx
;

72 
	må≠no
;

73 
	mîr
;

74 
	meù
;

75 
	mcs
, 
	m__csh
;

76 
	meÊags
;

77 
	me•_©_sig«l
;

78 
	mss
, 
	m__ssh
;

79 
_Â°©e
 
__u£r
 * 
	mÂ°©e
;

80 
	mﬁdmask
;

81 
	m¸2
;

	@/usr/include/asm-x86_64/sigcontext.h

1 #i‚de‡
_ASM_X86_64_SIGCONTEXT_H


2 
	#_ASM_X86_64_SIGCONTEXT_H


	)

4 
	~<asm/ty≥s.h
>

5 
	~<löux/compûî.h
>

10 
	s_Â°©e
 {

11 
__u16
 
	mcwd
;

12 
__u16
 
	mswd
;

13 
__u16
 
	mtwd
;

14 
__u16
 
	mf›
;

15 
__u64
 
	mrù
;

16 
__u64
 
	mrdp
;

17 
__u32
 
	mmxc§
;

18 
__u32
 
	mmxc§_mask
;

19 
__u32
 
	m°_•a˚
[32];

20 
__u32
 
	mxmm_•a˚
[64];

21 
__u32
 
	mª£rved2
[24];

24 
	ssigc⁄ãxt
 {

25 
	mr8
;

26 
	mr9
;

27 
	mr10
;

28 
	mr11
;

29 
	mr12
;

30 
	mr13
;

31 
	mr14
;

32 
	mr15
;

33 
	mrdi
;

34 
	mrsi
;

35 
	mrbp
;

36 
	mrbx
;

37 
	mrdx
;

38 
	møx
;

39 
	mrcx
;

40 
	mr•
;

41 
	mrù
;

42 
	meÊags
;

43 
	mcs
;

44 
	mgs
;

45 
	mfs
;

46 
	m__∑d0
;

47 
	mîr
;

48 
	må≠no
;

49 
	mﬁdmask
;

50 
	m¸2
;

51 
_Â°©e
 
__u£r
 *
	mÂ°©e
;

52 
	mª£rved1
[8];

	@/usr/include/asm/types.h

5 #ifde‡
__x86_64__


6 
	~<asm-x86_64/ty≥s.h
>

8 
	~<asm-i486/ty≥s.h
>

	@/usr/include/linux/compiler.h

1 #i‚de‡
__LINUX_COMPILER_H


2 
	#__LINUX_COMPILER_H


	)

4 #i‚de‡
__ASSEMBLY__


6 #ifde‡
__CHECKER__


7 
	#__u£r
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(1)))

	)

8 
	#__kî√l


	)

9 
	#__ß„
 
	`__©åibuã__
((
ß„
))

	)

10 
	#__f‹˚
 
	`__©åibuã__
((
f‹˚
))

	)

11 
	#__noˇ°
 
	`__©åibuã__
((
noˇ°
))

	)

12 
	#__iomem
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(2)))

	)

13 
	#__acquúes
(
x
Ë
	`__©åibuã__
((
	`c⁄ãxt
(0,1)))

	)

14 
	#__ªÀa£s
(
x
Ë
	`__©åibuã__
((
	`c⁄ãxt
(1,0)))

	)

15 
	#__acquúe
(
x
Ë
	`__c⁄ãxt__
(1)

	)

16 
	#__ªÀa£
(
x
Ë
	`__c⁄ãxt__
(-1)

	)

17 
	#__c⁄d_lock
(
x
Ë((xË? ({ 
	`__c⁄ãxt__
(1); 1; }Ë: 0)

	)

18 
__chk_u£r_±r
(
__u£r
 *);

19 
__chk_io_±r
(
__iomem
 *);

21 
	#__u£r


	)

22 
	#__kî√l


	)

23 
	#__ß„


	)

24 
	#__f‹˚


	)

25 
	#__noˇ°


	)

26 
	#__iomem


	)

27 
	#__chk_u£r_±r
(
x
Ë()0

	)

28 
	#__chk_io_±r
(
x
Ë()0

	)

29 #i‡!
deföed
(
__STRICT_ANSI__
)

30 
	#__buûtö_w¨nög
(
x
, 
y
...Ë(1)

	)

32 
	#__acquúes
(
x
)

	)

33 
	#__ªÀa£s
(
x
)

	)

34 
	#__acquúe
(
x
Ë()0

	)

35 
	#__ªÀa£
(
x
Ë()0

	)

36 
	#__c⁄d_lock
(
x
Ë(x)

	)

39 #i‡!
deföed
(
__KERNEL__
)

44 
	~<sys/cdefs.h
>

45 
	#__dïªˇãd


	)

48 #ifde‡
__KERNEL__


50 #i‡
__GNUC__
 > 4

51 #îr‹ 
no
 
compûî
-
gcc
.
h
 
fûe
 
this
 gc¯
vîsi⁄


52 #ñi‡
__GNUC__
 == 4

53 
	~<löux/compûî-gcc4.h
>

54 #ñi‡
__GNUC__
 == 3

55 
	~<löux/compûî-gcc3.h
>

57 #îr‹ 
S‹ry
, 
your
 
compûî
 
is
 
too
 
ﬁd
/
nŸ
 
ªcognized
.

63 #ifde‡
__INTEL_COMPILER


64 
	~<löux/compûî-öãl.h
>

73 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

74 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

77 #i‚de‡
b¨rõr


78 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

81 #i‚de‡
RELOC_HIDE


82 
	#RELOC_HIDE
(
±r
, 
off
) \

83 ({ 
__±r
; \

84 
__±r
 = (Ë(
±r
); \

85 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

92 #ifde‡
__KERNEL__


99 #i‚de‡
__dïªˇãd


100 
	#__dïªˇãd


	)

103 #ifde‡
MODULE


104 
	#__dïªˇãd_f‹_moduÀs
 
__dïªˇãd


	)

106 
	#__dïªˇãd_f‹_moduÀs


	)

109 #i‚de‡
__mu°_check


110 
	#__mu°_check


	)

124 #i‚de‡
__©åibuã_u£d__


125 
	#__©åibuã_u£d__


	)

138 #i‚de‡
__©åibuã_puª__


139 
	#__©åibuã_puª__


	)

142 #i‚de‡
noölöe


143 
	#noölöe


	)

146 #i‚de‡
__Æways_ölöe


147 
	#__Æways_ölöe
 
ölöe


	)

166 #i‚de‡
__©åibuã_c⁄°__


167 
	#__©åibuã_c⁄°__


	)

	@/usr/include/asm-i486/types.h

1 #i‚de‡
_I386_TYPES_H


2 
	#_I386_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #i‡
deföed
(
__GNUC__
)

23 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

24 
__exãnsi⁄__
 
	t__u64
;

32 #ifde‡
__KERNEL__


34 
	#BITS_PER_LONG
 32

	)

36 #i‚de‡
__ASSEMBLY__


39 sig√d 
	ts8
;

40 
	tu8
;

42 sig√d 
	ts16
;

43 
	tu16
;

45 sig√d 
	ts32
;

46 
	tu32
;

48 sig√d 
	ts64
;

49 
	tu64
;

53 #ifde‡
CONFIG_HIGHMEM64G


54 
u64
 
	tdma_addr_t
;

56 
u32
 
	tdma_addr_t
;

58 
u64
 
	tdma64_addr_t
;

60 #ifde‡
CONFIG_LBD


61 
u64
 
	t£˘‹_t
;

62 
	#HAVE_SECTOR_T


	)

65 #ifde‡
CONFIG_LSF


66 
u64
 
	tblk˙t_t
;

67 
	#HAVE_BLKCNT_T


	)

	@/usr/include/asm-x86_64/types.h

1 #i‚de‡
_X86_64_TYPES_H


2 
	#_X86_64_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #i‡
deföed
(
__GNUC__
)

23 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

24 
__exãnsi⁄__
 
	t__u64
;

32 #ifde‡
__KERNEL__


34 
	#BITS_PER_LONG
 64

	)

36 #i‚de‡
__ASSEMBLY__


38 sig√d 
	ts8
;

39 
	tu8
;

41 sig√d 
	ts16
;

42 
	tu16
;

44 sig√d 
	ts32
;

45 
	tu32
;

47 sig√d 
	ts64
;

48 
	tu64
;

50 
u64
 
	tdma64_addr_t
;

51 
u64
 
	tdma_addr_t
;

53 
u64
 
	t£˘‹_t
;

54 
	#HAVE_SECTOR_T


	)

	@/usr/include/linux/compiler-gcc3.h

4 
	~<löux/compûî-gcc.h
>

6 #i‡
__GNUC_MINOR__
 >= 3

7 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

9 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__unu£d__
))

	)

12 #i‡
__GNUC_MINOR__
 >= 4

13 
	#__mu°_check
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

16 
	#__Æways_ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

	@/usr/include/linux/compiler-gcc4.h

4 
	~<löux/compûî-gcc.h
>

6 #ifde‡
CONFIG_FORCED_INLINING


7 #unde‡
ölöe


8 #unde‡
__ölöe__


9 #unde‡
__ölöe


10 
	#ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

11 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

12 
	#__ölöe
 
__ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

15 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

16 
	#__mu°_check
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
))

	)

17 
	#__compûî_off£tof
(
a
,
b
Ë
	`__buûtö_off£tof
◊,b)

	)

18 
	#__Æways_ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

	@/usr/include/linux/compiler-intel.h

3 #ifde‡
__ECC


9 
	~<asm/öåösics.h
>

14 #unde‡
b¨rõr


15 #unde‡
RELOC_HIDE


17 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

19 
	#RELOC_HIDE
(
±r
, 
off
) \

20 ({ 
__±r
; \

21 
__±r
 = (Ë(
±r
); \

22 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

	@/usr/include/linux/compiler-gcc.h

10 
	#b¨rõr
(Ë
__asm__
 
	`__vﬁ©ûe__
("": : :"mem‹y")

	)

20 
	#RELOC_HIDE
(
±r
, 
off
) \

21 ({ 
__±r
; \

22 
	`__asm__
 ("" : "Ù"(
__±r
Ë: "0"(
±r
)); \

23 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

26 
	#ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

27 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

28 
	#__ölöe
 
__ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

29 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

30 
	#noölöe
 
	`__©åibuã__
((
noölöe
))

	)

31 
	#__©åibuã_puª__
 
	`__©åibuã__
((
puª
))

	)

32 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
((
__c⁄°__
))

	)

	@
1
.
1
/usr/include
83
2217
cl.c
sr.c
/usr/include/arpa/inet.h
/usr/include/fcntl.h
/usr/include/stdio.h
/usr/include/sys/socket.h
/usr/include/bits/fcntl.h
/usr/include/bits/socket.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/netinet/in.h
/usr/include/sys/stat.h
/usr/include/sys/uio.h
/usr/include/_G_config.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap.h
/usr/include/bits/in.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/limits.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/asm-i486/socket.h
/usr/include/asm-x86_64/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/time.h
/usr/include/bits/wchar.h
/usr/include/bits/xopen_lim.h
/usr/include/gconv.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/asm/sockios.h
/usr/include/bits/local_lim.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-i486/sockios.h
/usr/include/asm-x86_64/sockios.h
/usr/include/bits/initspin.h
/usr/include/bits/sigthread.h
/usr/include/linux/limits.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/sys/ucontext.h
/usr/include/asm/sigcontext.h
/usr/include/asm-i486/sigcontext.h
/usr/include/asm-x86_64/sigcontext.h
/usr/include/asm/types.h
/usr/include/linux/compiler.h
/usr/include/asm-i486/types.h
/usr/include/asm-x86_64/types.h
/usr/include/linux/compiler-gcc3.h
/usr/include/linux/compiler-gcc4.h
/usr/include/linux/compiler-intel.h
/usr/include/linux/compiler-gcc.h
